---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Post-Merge CI Pipeline

on:
  push:
    branches:
      - main
      - release-*
  workflow_dispatch:

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    outputs:
      filtered_projects: ${{ steps.filter-changes.outputs.filtered_projects }}
      manifest: ${{ contains(steps.check-files.outputs.changed_files, 'ena-manifest.yaml') }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: "Discover Changed Subfolders"
        id: discover-changes
        uses: open-edge-platform/orch-ci/discover-changed-subfolders@40d61a820157bc9b70d3f2bdc5aec786073d48f2
      - name: "Filter Out Unwanted Changed Subfolders"
        id: filter-changes
        run: |
          folders_to_remove='[".github",".reuse","LICENSES"]'

          changed_projects='${{ steps.discover-changes.outputs.changed_projects }}'
          filtered_projects=$(echo "$changed_projects" | jq -cr --argjson folders_to_remove "$folders_to_remove" 'map(select(. as $item | $folders_to_remove | index($item) | not))')
          echo "filtered_projects=${filtered_projects}" >> ${GITHUB_OUTPUT}

      - name: Discover Changed Files
        id: check-files
        uses: open-edge-platform/orch-ci/discover-changed-files@40d61a820157bc9b70d3f2bdc5aec786073d48f2
        with:
          project_folder: "."
  post-merge-pipeline:
    needs: pre-checks
    if: ${{ needs.pre-checks.outputs.filtered_projects != '[]' && needs.pre-checks.outputs.filtered_projects != '[""]' }}
    strategy:
      fail-fast: false
      matrix:
        #runner_version: [ubuntu-24.04, ubuntu-22.04]
        project_folder: ${{ fromJson(needs.pre-checks.outputs.filtered_projects) }}
    uses: open-edge-platform/orch-ci/.github/workflows/post-merge.yml@main
    with:
    #  runner_version: ${{ matrix.runner_version }}
      runs_on: ubuntu-22.04
      run_build: true
      run_lint: true
      run_test: true
      run_package_build: true
      run_deb_push: true
      run_version_tag: true
      run_version_dev: true
      prefix_tag_separator: "/"
      project_folder: ${{ matrix.project_folder }}
      remove_cache_go: true
      cache_go: true
    secrets: inherit
  push-manifest:
    runs-on: ubuntu-latest
    needs:
      - pre-checks
      - post-merge-pipeline
    if: ${{ always() && needs.pre-checks.outputs.manifest == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # Fetch all history, WO sporadic issue with missing tags
          fetch-tags: true # Fetch tags
          ref: ${{ github.head_ref }} # Checkout the branch that triggered the workflow to avoid detached HEAD

      - name: Checkout action repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: open-edge-platform/orch-ci
          path: ci
          token: ${{ secrets.SYS_ORCH_GITHUB }}

      - name: Setup CI environment
        uses: open-edge-platform/orch-ci/.github/actions/bootstrap@40d61a820157bc9b70d3f2bdc5aec786073d48f2
        with:
          gh_token: ${{ secrets.SYS_ORCH_GITHUB }}
          bootstrap_tools: "yq,aws,oras"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.NO_AUTH_ECR_PUSH_USERNAME }}
          aws-secret-access-key: ${{ secrets.NO_AUTH_ECR_PUSH_PASSWD }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: "080137407410"

      - name: Push manifest
        shell: bash
        env:
          REGISTRY: 080137407410.dkr.ecr.us-west-2.amazonaws.com
          REPOSITORY: edge-orch/en/files/ena-manifest
          MANIFEST: ena-manifest.yaml
        run: |
          version=$(yq '.metadata.release' ${MANIFEST})
          if [[ "$version" =~ .*-dev ]]; then
              version=${version}-$(git rev-parse --short HEAD)
              yq -i ".metadata.release = \"${version}\"" ${MANIFEST}
          fi

          aws ecr create-repository --region us-west-2 --repository-name ${REPOSITORY} || true
          oras push --artifact-type application/vnd.intel.orch.en \
            ${REGISTRY}/${REPOSITORY}:${GITHUB_REF_NAME},${version} ${MANIFEST}

      - name: Tag new manifest version
        run: |
          ./common/ci_scripts/manifest-versioning.sh tag
