{
  "apiVersion": "v1",
  "items": [
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1"
        },
        "creationTimestamp": "2025-05-21T08:24:05Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/name": "calico-kube-controllers",
          "k8s-app": "calico-kube-controllers"
        },
        "name": "calico-kube-controllers",
        "namespace": "calico-system",
        "ownerReferences": [
          {
            "apiVersion": "operator.tigera.io/v1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "Installation",
            "name": "default",
            "uid": "f2dd5263-ed9a-4027-99dd-c3e7f00965dd"
          }
        ],
        "resourceVersion": "1480",
        "uid": "19dcb174-945a-4853-a79d-37aa42ed0cd3"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "k8s-app": "calico-kube-controllers"
          }
        },
        "strategy": {
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "hash.operator.tigera.io/system": "fdde45054a8ae4f629960ce37570929502e59449",
              "tigera-operator.hash.operator.tigera.io/tigera-ca-private": "396597a1921749571f8a036eee22ae5fe15500f0"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/name": "calico-kube-controllers",
              "k8s-app": "calico-kube-controllers"
            },
            "name": "calico-kube-controllers",
            "namespace": "calico-system"
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "KUBE_CONTROLLERS_CONFIG_NAME",
                    "value": "default"
                  },
                  {
                    "name": "DATASTORE_TYPE",
                    "value": "kubernetes"
                  },
                  {
                    "name": "ENABLED_CONTROLLERS",
                    "value": "node"
                  },
                  {
                    "name": "FIPS_MODE_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "DISABLE_KUBE_CONTROLLERS_CONFIG_API",
                    "value": "false"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "10.43.0.1"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "443"
                  },
                  {
                    "name": "CA_CRT_PATH",
                    "value": "/etc/pki/tls/certs/tigera-ca-bundle.crt"
                  }
                ],
                "image": "docker.io/rancher/mirrored-calico-kube-controllers:v3.29.2",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "exec": {
                    "command": [
                      "/usr/bin/check-status",
                      "-l"
                    ]
                  },
                  "failureThreshold": 6,
                  "initialDelaySeconds": 10,
                  "periodSeconds": 60,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "name": "calico-kube-controllers",
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/usr/bin/check-status",
                      "-r"
                    ]
                  },
                  "failureThreshold": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "runAsGroup": 0,
                  "runAsNonRoot": true,
                  "runAsUser": 999,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/pki/tls/certs",
                    "name": "tigera-ca-bundle",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/pki/tls/cert.pem",
                    "name": "tigera-ca-bundle",
                    "readOnly": true,
                    "subPath": "ca-bundle.crt"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "calico-kube-controllers",
            "serviceAccountName": "calico-kube-controllers",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "key": "node-role.kubernetes.io/etcd",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane"
              },
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "tigera-ca-bundle"
                },
                "name": "tigera-ca-bundle"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:24:34Z",
            "lastUpdateTime": "2025-05-21T08:24:34Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:24:05Z",
            "lastUpdateTime": "2025-05-21T08:24:34Z",
            "message": "ReplicaSet \"calico-kube-controllers-6b6b947596\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1"
        },
        "creationTimestamp": "2025-05-21T08:24:05Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/name": "calico-typha",
          "k8s-app": "calico-typha"
        },
        "name": "calico-typha",
        "namespace": "calico-system",
        "ownerReferences": [
          {
            "apiVersion": "operator.tigera.io/v1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "Installation",
            "name": "default",
            "uid": "f2dd5263-ed9a-4027-99dd-c3e7f00965dd"
          }
        ],
        "resourceVersion": "1169",
        "uid": "67449632-af42-4efc-9835-b95b016a8522"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 2,
        "selector": {
          "matchLabels": {
            "k8s-app": "calico-typha"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "100%",
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "hash.operator.tigera.io/system": "fdde45054a8ae4f629960ce37570929502e59449",
              "tigera-operator.hash.operator.tigera.io/tigera-ca-private": "396597a1921749571f8a036eee22ae5fe15500f0",
              "tigera-operator.hash.operator.tigera.io/typha-certs": "724211a19a0cad1f1c78de229c27dd405963c158"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/name": "calico-typha",
              "k8s-app": "calico-typha"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "k8s-app",
                            "operator": "In",
                            "values": [
                              "calico-typha"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "topology.kubernetes.io/zone"
                    },
                    "weight": 1
                  }
                ]
              }
            },
            "containers": [
              {
                "env": [
                  {
                    "name": "TYPHA_LOGSEVERITYSCREEN",
                    "value": "info"
                  },
                  {
                    "name": "TYPHA_LOGFILEPATH",
                    "value": "none"
                  },
                  {
                    "name": "TYPHA_LOGSEVERITYSYS",
                    "value": "none"
                  },
                  {
                    "name": "TYPHA_CONNECTIONREBALANCINGMODE",
                    "value": "kubernetes"
                  },
                  {
                    "name": "TYPHA_DATASTORETYPE",
                    "value": "kubernetes"
                  },
                  {
                    "name": "TYPHA_HEALTHENABLED",
                    "value": "true"
                  },
                  {
                    "name": "TYPHA_HEALTHPORT",
                    "value": "9098"
                  },
                  {
                    "name": "TYPHA_K8SNAMESPACE",
                    "value": "calico-system"
                  },
                  {
                    "name": "TYPHA_CAFILE",
                    "value": "/etc/pki/tls/certs/tigera-ca-bundle.crt"
                  },
                  {
                    "name": "TYPHA_SERVERCERTFILE",
                    "value": "/typha-certs/tls.crt"
                  },
                  {
                    "name": "TYPHA_SERVERKEYFILE",
                    "value": "/typha-certs/tls.key"
                  },
                  {
                    "name": "TYPHA_FIPSMODEENABLED",
                    "value": "false"
                  },
                  {
                    "name": "TYPHA_SHUTDOWNTIMEOUTSECS",
                    "value": "300"
                  },
                  {
                    "name": "TYPHA_CLIENTCN",
                    "value": "typha-client"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "10.43.0.1"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "443"
                  }
                ],
                "image": "docker.io/rancher/mirrored-calico-typha:v3.29.2",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "host": "localhost",
                    "path": "/liveness",
                    "port": 9098,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 60,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "name": "calico-typha",
                "ports": [
                  {
                    "containerPort": 5473,
                    "name": "calico-typha",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "host": "localhost",
                    "path": "/readiness",
                    "port": 9098,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/pki/tls/certs",
                    "name": "tigera-ca-bundle",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/pki/tls/cert.pem",
                    "name": "tigera-ca-bundle",
                    "readOnly": true,
                    "subPath": "ca-bundle.crt"
                  },
                  {
                    "mountPath": "/typha-certs",
                    "name": "typha-certs",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "hostNetwork": true,
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "calico-typha",
            "serviceAccountName": "calico-typha",
            "terminationGracePeriodSeconds": 300,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "key": "node-role.kubernetes.io/etcd",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "tigera-ca-bundle"
                },
                "name": "tigera-ca-bundle"
              },
              {
                "name": "typha-certs",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "typha-certs"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:24:05Z",
            "lastUpdateTime": "2025-05-21T08:24:05Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:24:05Z",
            "lastUpdateTime": "2025-05-21T08:24:24Z",
            "message": "ReplicaSet \"calico-typha-bc649445d\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/5RV3XLiRhN9l7mWMT+fd23d6YPxRrWyoATO1tYWRQ2jFkx2NKPMD2vi0runWhIgNo6T3KmHPt2nu083r6QEx3LmGAlfCVNKO+aEVhZNvf0NuLPgBkboAWfOSRgIfStyEpJCArgbtgPlbrZaO+sMq0gdEG6gCbESJVjHyoqEyksZEMm2IN8NvGd2j6EnDw/5cDsZDYttsR3fw8OHDx8no3GR849sMnm4+x+Mt/f8HrMpVsI1G9I+2opx/KWNftM62KN1UCLOVsCRigUJ3GmD3yVzfJ+cWbKq+ilyjUBnmIPdkYSvdUAclJVkDhp4r5P/ogl/E77jxYpCKOEwDVE6h6hnVwYKMAbymTdC7ZZ8D7mXQu3indLnZ/oC3CMHEn47YUBxOFdKXyoD1rbT/vZKvsPxRKg3k1NPdQWGNY0isSIBOTDpAYHEGQ9kXa/rgPwAsds7Eo7qNRbDtXJMKDBtAq7LkqkcMU2WNvQ6IKAOjUM3zP8/p7OEzugimX99oulqk9HpPJ3GCc02X+bZZ5otTwRISO6GpA7O2FkWP/4nQBo90eUimtKTx6PRJfaoECDzDIrz94I5VOdpzIOLyuq6FzD6hJSX0/mC9vNMf6HTz3G6idMVzX6Nkh6h0V05tFe+0WqV0A1N6HQVz9NNQqMl3cyeswjNHnLyPi6jq+zrZkGzeD7r5/snVEq/bGY0miVxSnu48Z0l9TogomQ7tA1TfA/mtqfh8DAcjMaDMem8Fl7KhZaCo7TiItVuYcBetvQvq2vAam84Kgv3ywL3RrjjVCsHL67ZDCn1j4URByFhB9RyJlkr84JJCwHhrGJbIYUTTRSSG12h5qIkISjS6oTNzxADLJ8recy0do9CQncnQpR2HZCDlr6EJ+2Va5Vc4menh9vBd7+FSz2Nhe29cnJldXFBo15jK3G1l70ThGCjwIHF3dOWhEQK5V/I270wXkX2k9G+IuFoOBwG7UuqFVbS8u/eni2Y1qkJZQ6CQ8Q5ckzfGoTTEhf+fB2gKIA7XBjdHRysub0ZWMWAS+3zyuiDyMEMrgvxCo+XYFL8Afn1MaG/eyZ7ImuuCbbvvYSX86Tt++G67q1PQ+yKKSt3nAnTiuznwb35azez9i+AOd8ItP4zAAD//4ZCK6pABwAA",
          "objectset.rio.cattle.io/id": "fleet-agent-bootstrap"
        },
        "creationTimestamp": "2025-05-22T09:28:47Z",
        "generation": 1,
        "labels": {
          "objectset.rio.cattle.io/hash": "f399d0b310fbfb28e9667312fdc7a33954e2b8c8"
        },
        "name": "fleet-agent",
        "namespace": "cattle-fleet-system",
        "resourceVersion": "439678",
        "uid": "fab95d01-1e92-4ed2-ac03-e7eaa06f49a9"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "fleet-agent"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "fleet-agent"
            }
          },
          "spec": {
            "affinity": {
              "nodeAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "preference": {
                      "matchExpressions": [
                        {
                          "key": "fleet.cattle.io/agent",
                          "operator": "In",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    },
                    "weight": 1
                  }
                ]
              }
            },
            "containers": [
              {
                "command": [
                  "fleetagent"
                ],
                "env": [
                  {
                    "name": "BUNDLEDEPLOYMENT_RECONCILER_WORKERS",
                    "value": "50"
                  },
                  {
                    "name": "DRIFT_RECONCILER_WORKERS",
                    "value": "50"
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "AGENT_SCOPE"
                  },
                  {
                    "name": "CHECKIN_INTERVAL",
                    "value": "15m0s"
                  },
                  {
                    "name": "CATTLE_ELECTION_LEASE_DURATION",
                    "value": "30s"
                  },
                  {
                    "name": "CATTLE_ELECTION_RETRY_PERIOD",
                    "value": "10s"
                  },
                  {
                    "name": "CATTLE_ELECTION_RENEW_DEADLINE",
                    "value": "25s"
                  }
                ],
                "image": "rancher/fleet-agent:v0.12.2",
                "imagePullPolicy": "IfNotPresent",
                "name": "fleet-agent",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/.kube",
                    "name": "kube"
                  },
                  {
                    "mountPath": "/tmp",
                    "name": "tmp"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsGroup": 1000,
              "runAsNonRoot": true,
              "runAsUser": 1000
            },
            "serviceAccount": "fleet-agent",
            "serviceAccountName": "fleet-agent",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node.cloudprovider.kubernetes.io/uninitialized",
                "operator": "Equal",
                "value": "true"
              },
              {
                "effect": "NoSchedule",
                "key": "cattle.io/os",
                "operator": "Equal",
                "value": "linux"
              }
            ],
            "volumes": [
              {
                "emptyDir": {},
                "name": "kube"
              },
              {
                "emptyDir": {},
                "name": "tmp"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-22T09:28:47Z",
            "lastUpdateTime": "2025-05-22T09:28:47Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-22T09:28:47Z",
            "lastUpdateTime": "2025-05-22T09:28:47Z",
            "message": "ReplicaSet \"fleet-agent-69f85d6cb4\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
          "meta.helm.sh/release-namespace": "cert-manager",
          "objectset.rio.cattle.io/id": "default-b-73720bb7-67ec-541f-ab86-5f227c6c6c30"
        },
        "creationTimestamp": "2025-05-21T08:27:08Z",
        "generation": 1,
        "labels": {
          "app": "cert-manager",
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "cert-manager",
          "app.kubernetes.io/version": "v1.16.2",
          "helm.sh/chart": "cert-manager-v1.16.2",
          "objectset.rio.cattle.io/hash": "ab4e7eedd03505c1ce53991bb78f777214c53a4f"
        },
        "name": "cert-manager",
        "namespace": "cert-manager",
        "resourceVersion": "2417",
        "uid": "9a83951a-8682-454d-8e9a-690ee1cb83cf"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
            "app.kubernetes.io/name": "cert-manager"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/metrics",
              "prometheus.io/port": "9402",
              "prometheus.io/scrape": "true"
            },
            "creationTimestamp": null,
            "labels": {
              "app": "cert-manager",
              "app.kubernetes.io/component": "controller",
              "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "cert-manager",
              "app.kubernetes.io/version": "v1.16.2",
              "helm.sh/chart": "cert-manager-v1.16.2"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--v=2",
                  "--cluster-resource-namespace=$(POD_NAMESPACE)",
                  "--leader-election-namespace=kube-system",
                  "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.16.2",
                  "--max-concurrent-challenges=60"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/jetstack/cert-manager-controller:v1.16.2",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 8,
                  "httpGet": {
                    "path": "/livez",
                    "port": "http-healthz",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 15
                },
                "name": "cert-manager-controller",
                "ports": [
                  {
                    "containerPort": 9402,
                    "name": "http-metrics",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9403,
                    "name": "http-healthz",
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "32Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": false,
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "serviceAccount": "cert-manager",
            "serviceAccountName": "cert-manager",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:27:13Z",
            "lastUpdateTime": "2025-05-21T08:27:13Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:08Z",
            "lastUpdateTime": "2025-05-21T08:27:13Z",
            "message": "ReplicaSet \"cert-manager-cb67fb8b5\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
          "meta.helm.sh/release-namespace": "cert-manager",
          "objectset.rio.cattle.io/id": "default-b-73720bb7-67ec-541f-ab86-5f227c6c6c30"
        },
        "creationTimestamp": "2025-05-21T08:27:08Z",
        "generation": 1,
        "labels": {
          "app": "cainjector",
          "app.kubernetes.io/component": "cainjector",
          "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "cainjector",
          "app.kubernetes.io/version": "v1.16.2",
          "helm.sh/chart": "cert-manager-v1.16.2",
          "objectset.rio.cattle.io/hash": "ab4e7eedd03505c1ce53991bb78f777214c53a4f"
        },
        "name": "cert-manager-cainjector",
        "namespace": "cert-manager",
        "resourceVersion": "2422",
        "uid": "ea5a88c7-b2cd-46ca-bcf7-ab3ef2fdf9d6"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
            "app.kubernetes.io/name": "cainjector"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/metrics",
              "prometheus.io/port": "9402",
              "prometheus.io/scrape": "true"
            },
            "creationTimestamp": null,
            "labels": {
              "app": "cainjector",
              "app.kubernetes.io/component": "cainjector",
              "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "cainjector",
              "app.kubernetes.io/version": "v1.16.2",
              "helm.sh/chart": "cert-manager-v1.16.2"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--v=2",
                  "--leader-election-namespace=kube-system"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/jetstack/cert-manager-cainjector:v1.16.2",
                "imagePullPolicy": "IfNotPresent",
                "name": "cert-manager-cainjector",
                "ports": [
                  {
                    "containerPort": 9402,
                    "name": "http-metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": false,
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "serviceAccount": "cert-manager-cainjector",
            "serviceAccountName": "cert-manager-cainjector",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:27:13Z",
            "lastUpdateTime": "2025-05-21T08:27:13Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:08Z",
            "lastUpdateTime": "2025-05-21T08:27:13Z",
            "message": "ReplicaSet \"cert-manager-cainjector-694fb79749\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
          "meta.helm.sh/release-namespace": "cert-manager",
          "objectset.rio.cattle.io/id": "default-b-73720bb7-67ec-541f-ab86-5f227c6c6c30"
        },
        "creationTimestamp": "2025-05-21T08:27:08Z",
        "generation": 1,
        "labels": {
          "app": "webhook",
          "app.kubernetes.io/component": "webhook",
          "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "webhook",
          "app.kubernetes.io/version": "v1.16.2",
          "helm.sh/chart": "cert-manager-v1.16.2",
          "objectset.rio.cattle.io/hash": "ab4e7eedd03505c1ce53991bb78f777214c53a4f"
        },
        "name": "cert-manager-webhook",
        "namespace": "cert-manager",
        "resourceVersion": "2455",
        "uid": "80dce3af-36e8-4397-9b24-5fe9f1a3b8e7"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
            "app.kubernetes.io/name": "webhook"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/metrics",
              "prometheus.io/port": "9402",
              "prometheus.io/scrape": "true"
            },
            "creationTimestamp": null,
            "labels": {
              "app": "webhook",
              "app.kubernetes.io/component": "webhook",
              "app.kubernetes.io/instance": "b-73720bb7-67ec-541f-ab86-5f227c6c6c30",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "webhook",
              "app.kubernetes.io/version": "v1.16.2",
              "helm.sh/chart": "cert-manager-v1.16.2"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--v=2",
                  "--secure-port=10250",
                  "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                  "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                  "--dynamic-serving-dns-names=cert-manager-webhook",
                  "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
                  "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "quay.io/jetstack/cert-manager-webhook:v1.16.2",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/livez",
                    "port": 6080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "cert-manager-webhook",
                "ports": [
                  {
                    "containerPort": 10250,
                    "name": "https",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 6080,
                    "name": "healthcheck",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9402,
                    "name": "http-metrics",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 6080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": false,
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "serviceAccount": "cert-manager-webhook",
            "serviceAccountName": "cert-manager-webhook",
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:27:19Z",
            "lastUpdateTime": "2025-05-21T08:27:19Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:08Z",
            "lastUpdateTime": "2025-05-21T08:27:19Z",
            "message": "ReplicaSet \"cert-manager-webhook-6d4fdb495d\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-1967f69e-e29c-544e-9854-41fbadb797b4",
          "meta.helm.sh/release-namespace": "deployment-s6z6f",
          "objectset.rio.cattle.io/id": "default-b-1967f69e-e29c-544e-9854-41fbadb797b4"
        },
        "creationTimestamp": "2025-05-21T08:35:53Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "b-1967f69e-e29c-544e-9854-41fbadb797b4",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "nginx",
          "app.kubernetes.io/version": "1.25.3",
          "helm.sh/chart": "nginx-15.9.3",
          "objectset.rio.cattle.io/hash": "579f0280b9992d582066a303b49179763ce9effb"
        },
        "name": "b-1967f69e-e29c-544e-9854-41fbadb797b4-nginx",
        "namespace": "deployment-s6z6f",
        "resourceVersion": "6342",
        "uid": "004966a7-f883-476d-be70-78a972a73b42"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-1967f69e-e29c-544e-9854-41fbadb797b4",
            "app.kubernetes.io/name": "nginx"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "b-1967f69e-e29c-544e-9854-41fbadb797b4",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "nginx",
              "app.kubernetes.io/version": "1.25.3",
              "helm.sh/chart": "nginx-15.9.3"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/instance": "b-1967f69e-e29c-544e-9854-41fbadb797b4",
                          "app.kubernetes.io/name": "nginx"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 1
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "env": [
                  {
                    "name": "BITNAMI_DEBUG",
                    "value": "false"
                  },
                  {
                    "name": "NGINX_HTTP_PORT_NUMBER",
                    "value": "8080"
                  }
                ],
                "image": "docker.io/bitnami/nginx:1.25.3-debian-11-r4",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 6,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": {
                    "port": "http"
                  },
                  "timeoutSeconds": 5
                },
                "name": "nginx",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "initialDelaySeconds": 5,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "tcpSocket": {
                    "port": "http"
                  },
                  "timeoutSeconds": 3
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": false,
                  "runAsNonRoot": true,
                  "runAsUser": 1001,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 1001,
              "fsGroupChangePolicy": "Always"
            },
            "serviceAccount": "b-1967f69e-e29c-544e-9854-41fbadb797b4-nginx",
            "serviceAccountName": "b-1967f69e-e29c-544e-9854-41fbadb797b4-nginx",
            "shareProcessNamespace": false,
            "terminationGracePeriodSeconds": 30
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:36:08Z",
            "lastUpdateTime": "2025-05-21T08:36:08Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:35:53Z",
            "lastUpdateTime": "2025-05-21T08:36:08Z",
            "message": "ReplicaSet \"b-1967f69e-e29c-544e-9854-41fbadb797b4-nginx-7cd68d7fd4\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
          "meta.helm.sh/release-namespace": "deployment-s6z6f",
          "objectset.rio.cattle.io/id": "default-b-cd27eacc-fea7-5e38-8248-2892c66f8954"
        },
        "creationTimestamp": "2025-05-21T08:35:53Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "wordpress",
          "app.kubernetes.io/version": "6.4.3",
          "app.kubernetes.io/part-of": "something-bigger",
          "com.intel.edgeplatform.application.name": "wordpress",
          "com.intel.edgeplatform.application.version": "6.4.3",
          "helm.sh/chart": "wordpress-19.4.3",
          "objectset.rio.cattle.io/hash": "be35023621db4fb7330d36a6161c8f53660b66d0"
        },
        "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-wordpress",
        "namespace": "deployment-s6z6f",
        "resourceVersion": "6576",
        "uid": "5d68e137-f61c-4924-9c8f-8498e4378108"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
            "app.kubernetes.io/name": "wordpress"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "wordpress",
              "app.kubernetes.io/version": "6.4.3",
              "helm.sh/chart": "wordpress-19.4.3"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
                          "app.kubernetes.io/name": "wordpress"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 1
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "env": [
                  {
                    "name": "BITNAMI_DEBUG",
                    "value": "false"
                  },
                  {
                    "name": "ALLOW_EMPTY_PASSWORD",
                    "value": "yes"
                  },
                  {
                    "name": "WORDPRESS_SKIP_BOOTSTRAP",
                    "value": "no"
                  },
                  {
                    "name": "MARIADB_HOST",
                    "value": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb"
                  },
                  {
                    "name": "MARIADB_PORT_NUMBER",
                    "value": "3306"
                  },
                  {
                    "name": "WORDPRESS_DATABASE_NAME",
                    "value": "bitnami_wordpress"
                  },
                  {
                    "name": "WORDPRESS_DATABASE_USER",
                    "value": "bn_wordpress"
                  },
                  {
                    "name": "WORDPRESS_DATABASE_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "mariadb-password",
                        "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb"
                      }
                    }
                  },
                  {
                    "name": "WORDPRESS_USERNAME",
                    "value": "admin"
                  },
                  {
                    "name": "WORDPRESS_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "wordpress-password",
                        "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-wordpress"
                      }
                    }
                  },
                  {
                    "name": "WORDPRESS_EMAIL",
                    "value": "user@example.com"
                  },
                  {
                    "name": "WORDPRESS_FIRST_NAME",
                    "value": "FirstName"
                  },
                  {
                    "name": "WORDPRESS_LAST_NAME",
                    "value": "LastName"
                  },
                  {
                    "name": "WORDPRESS_HTACCESS_OVERRIDE_NONE",
                    "value": "no"
                  },
                  {
                    "name": "WORDPRESS_ENABLE_HTACCESS_PERSISTENCE",
                    "value": "no"
                  },
                  {
                    "name": "WORDPRESS_BLOG_NAME",
                    "value": "User's Blog!"
                  },
                  {
                    "name": "WORDPRESS_TABLE_PREFIX",
                    "value": "wp_"
                  },
                  {
                    "name": "WORDPRESS_SCHEME",
                    "value": "http"
                  },
                  {
                    "name": "WORDPRESS_EXTRA_WP_CONFIG_CONTENT"
                  },
                  {
                    "name": "WORDPRESS_PLUGINS",
                    "value": "none"
                  },
                  {
                    "name": "WORDPRESS_OVERRIDE_DATABASE_SETTINGS",
                    "value": "no"
                  },
                  {
                    "name": "APACHE_HTTP_PORT_NUMBER",
                    "value": "8080"
                  },
                  {
                    "name": "APACHE_HTTPS_PORT_NUMBER",
                    "value": "8443"
                  }
                ],
                "image": "docker.io/bitnami/wordpress:6.4.3-debian-12-r16",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 6,
                  "httpGet": {
                    "path": "/wp-admin/install.php",
                    "port": "http",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 120,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "wordpress",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8443,
                    "name": "https",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 6,
                  "httpGet": {
                    "path": "/wp-login.php",
                    "port": "http",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {
                  "requests": {
                    "cpu": "0",
                    "memory": "0"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": false,
                  "runAsNonRoot": true,
                  "runAsUser": 1001,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/bitnami/wordpress",
                    "name": "wordpress-data",
                    "subPath": "wordpress"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "hostAliases": [
              {
                "hostnames": [
                  "status.localhost"
                ],
                "ip": "127.0.0.1"
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 1001,
              "fsGroupChangePolicy": "Always"
            },
            "serviceAccount": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-wordpress",
            "serviceAccountName": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-wordpress",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "emptyDir": {},
                "name": "wordpress-data"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:36:54Z",
            "lastUpdateTime": "2025-05-21T08:36:54Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:35:53Z",
            "lastUpdateTime": "2025-05-21T08:36:54Z",
            "message": "ReplicaSet \"b-cd27eacc-fea7-5e38-8248-2892c66f8954-wordpress-86d5ccdbd6\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a",
          "meta.helm.sh/release-namespace": "gatekeeper-system",
          "objectset.rio.cattle.io/id": "default-b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
        },
        "creationTimestamp": "2025-05-21T08:27:44Z",
        "generation": 1,
        "labels": {
          "app": "gatekeeper",
          "app.kubernetes.io/managed-by": "Helm",
          "chart": "gatekeeper",
          "control-plane": "audit-controller",
          "gatekeeper.sh/operation": "audit",
          "gatekeeper.sh/system": "yes",
          "heritage": "Helm",
          "objectset.rio.cattle.io/hash": "0dcd4ba6a4967cfdc5a487a49dd42fb5cb8857fe",
          "release": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
        },
        "name": "gatekeeper-audit",
        "namespace": "gatekeeper-system",
        "resourceVersion": "3305",
        "uid": "8b87e331-93c3-43c4-b247-ee3d41fcbfb8"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "gatekeeper",
            "chart": "gatekeeper",
            "control-plane": "audit-controller",
            "gatekeeper.sh/operation": "audit",
            "gatekeeper.sh/system": "yes",
            "heritage": "Helm",
            "release": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "gatekeeper",
              "app.kubernetes.io/instance": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "gatekeeper",
              "app.kubernetes.io/version": "3.17.1",
              "chart": "gatekeeper",
              "control-plane": "audit-controller",
              "gatekeeper.sh/operation": "audit",
              "gatekeeper.sh/system": "yes",
              "helm.sh/chart": "gatekeeper-3.17.1",
              "heritage": "Helm",
              "release": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
            }
          },
          "spec": {
            "affinity": {},
            "automountServiceAccountToken": true,
            "containers": [
              {
                "args": [
                  "--audit-interval=60",
                  "--log-level=INFO",
                  "--constraint-violations-limit=20",
                  "--validating-webhook-configuration-name=gatekeeper-validating-webhook-configuration",
                  "--mutating-webhook-configuration-name=gatekeeper-mutating-webhook-configuration",
                  "--audit-from-cache=false",
                  "--audit-chunk-size=500",
                  "--audit-match-kind-only=false",
                  "--emit-audit-events=false",
                  "--audit-events-involved-namespace=false",
                  "--operation=audit",
                  "--operation=status",
                  "--operation=mutation-status",
                  "--logtostderr",
                  "--health-addr=:9090",
                  "--prometheus-port=8888",
                  "--enable-external-data=true",
                  "--enable-generator-resource-expansion=true",
                  "--metrics-backend=prometheus",
                  "--disable-cert-rotation=true",
                  "--external-data-provider-response-cache-ttl=3m",
                  "--enable-k8s-native-validation=true"
                ],
                "command": [
                  "/manager"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "CONTAINER_NAME",
                    "value": "manager"
                  },
                  {
                    "name": "OTEL_RESOURCE_ATTRIBUTES",
                    "value": "k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)"
                  }
                ],
                "image": "openpolicyagent/gatekeeper:v3.17.1",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 9090,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "manager",
                "ports": [
                  {
                    "containerPort": 8888,
                    "name": "metrics",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9090,
                    "name": "healthz",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/readyz",
                    "port": 9090,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 1000,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/certs",
                    "name": "cert",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/tmp/audit",
                    "name": "tmp-volume"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 999,
              "supplementalGroups": [
                999
              ]
            },
            "serviceAccount": "gatekeeper-admin",
            "serviceAccountName": "gatekeeper-admin",
            "terminationGracePeriodSeconds": 60,
            "volumes": [
              {
                "name": "cert",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "gatekeeper-webhook-server-cert"
                }
              },
              {
                "emptyDir": {},
                "name": "tmp-volume"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:27:54Z",
            "lastUpdateTime": "2025-05-21T08:27:54Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:44Z",
            "lastUpdateTime": "2025-05-21T08:27:54Z",
            "message": "ReplicaSet \"gatekeeper-audit-79c75c6584\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a",
          "meta.helm.sh/release-namespace": "gatekeeper-system",
          "objectset.rio.cattle.io/id": "default-b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
        },
        "creationTimestamp": "2025-05-21T08:27:44Z",
        "generation": 1,
        "labels": {
          "app": "gatekeeper",
          "app.kubernetes.io/managed-by": "Helm",
          "chart": "gatekeeper",
          "control-plane": "controller-manager",
          "gatekeeper.sh/operation": "webhook",
          "gatekeeper.sh/system": "yes",
          "heritage": "Helm",
          "objectset.rio.cattle.io/hash": "0dcd4ba6a4967cfdc5a487a49dd42fb5cb8857fe",
          "release": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
        },
        "name": "gatekeeper-controller-manager",
        "namespace": "gatekeeper-system",
        "resourceVersion": "3388",
        "uid": "7d13a9d1-9201-45d6-a205-591b20303a12"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 3,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "gatekeeper",
            "chart": "gatekeeper",
            "control-plane": "controller-manager",
            "gatekeeper.sh/operation": "webhook",
            "gatekeeper.sh/system": "yes",
            "heritage": "Helm",
            "release": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "gatekeeper",
              "app.kubernetes.io/instance": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "gatekeeper",
              "app.kubernetes.io/version": "3.17.1",
              "chart": "gatekeeper",
              "control-plane": "controller-manager",
              "gatekeeper.sh/operation": "webhook",
              "gatekeeper.sh/system": "yes",
              "helm.sh/chart": "gatekeeper-3.17.1",
              "heritage": "Helm",
              "release": "b-55cdf848-accb-533d-b3c5-b8a49c902d5a"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "gatekeeper.sh/operation",
                            "operator": "In",
                            "values": [
                              "webhook"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "args": [
                  "--port=8443",
                  "--health-addr=:9090",
                  "--prometheus-port=8888",
                  "--logtostderr",
                  "--log-denies=false",
                  "--emit-admission-events=false",
                  "--admission-events-involved-namespace=false",
                  "--log-level=INFO",
                  "--exempt-namespace=gatekeeper-system",
                  "--operation=webhook",
                  "--enable-external-data=true",
                  "--enable-generator-resource-expansion=true",
                  "--log-mutations=false",
                  "--mutation-annotations=false",
                  "--disable-cert-rotation=false",
                  "--max-serving-threads=-1",
                  "--tls-min-version=1.3",
                  "--validating-webhook-configuration-name=gatekeeper-validating-webhook-configuration",
                  "--mutating-webhook-configuration-name=gatekeeper-mutating-webhook-configuration",
                  "--external-data-provider-response-cache-ttl=3m",
                  "--enable-k8s-native-validation=true",
                  "--metrics-backend=prometheus",
                  "--operation=mutation-webhook",
                  "--disable-opa-builtin={http.send}"
                ],
                "command": [
                  "/manager"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "CONTAINER_NAME",
                    "value": "manager"
                  },
                  {
                    "name": "OTEL_RESOURCE_ATTRIBUTES",
                    "value": "k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)"
                  }
                ],
                "image": "openpolicyagent/gatekeeper:v3.17.1",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 9090,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "manager",
                "ports": [
                  {
                    "containerPort": 8443,
                    "name": "webhook-server",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8888,
                    "name": "metrics",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9090,
                    "name": "healthz",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/readyz",
                    "port": 9090,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "512Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 1000,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/certs",
                    "name": "cert",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 999,
              "supplementalGroups": [
                999
              ]
            },
            "serviceAccount": "gatekeeper-admin",
            "serviceAccountName": "gatekeeper-admin",
            "terminationGracePeriodSeconds": 60,
            "volumes": [
              {
                "name": "cert",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "gatekeeper-webhook-server-cert"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 3,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:28:04Z",
            "lastUpdateTime": "2025-05-21T08:28:04Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:44Z",
            "lastUpdateTime": "2025-05-21T08:28:04Z",
            "message": "ReplicaSet \"gatekeeper-controller-manager-5dc4bb5f87\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 3,
        "replicas": 3,
        "updatedReplicas": 3
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "rke2-coredns",
          "meta.helm.sh/release-namespace": "kube-system"
        },
        "creationTimestamp": "2025-05-21T08:23:56Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "rke2-coredns",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "rke2-coredns",
          "app.kubernetes.io/version": "1.11.3",
          "helm.sh/chart": "rke2-coredns-1.36.102",
          "k8s-app": "kube-dns",
          "kubernetes.io/cluster-service": "true",
          "kubernetes.io/name": "CoreDNS"
        },
        "name": "rke2-coredns-rke2-coredns",
        "namespace": "kube-system",
        "resourceVersion": "1632",
        "uid": "e0268af3-c597-42d5-b107-8d8db530b0ad"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "rke2-coredns",
            "app.kubernetes.io/name": "rke2-coredns",
            "k8s-app": "kube-dns"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "08ba15a9cee8aff105e7f080bfccbb476c52cf00395a33bd6008b988dba9bff0"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "rke2-coredns",
              "app.kubernetes.io/name": "rke2-coredns",
              "k8s-app": "kube-dns"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "k8s-app",
                          "operator": "In",
                          "values": [
                            "kube-dns"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "containers": [
              {
                "args": [
                  "-conf",
                  "/etc/coredns/Corefile"
                ],
                "image": "rancher/hardened-coredns:v1.12.0-build20241126",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 5,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "coredns",
                "ports": [
                  {
                    "containerPort": 53,
                    "name": "udp-53",
                    "protocol": "UDP"
                  },
                  {
                    "containerPort": 53,
                    "name": "tcp-53",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9153,
                    "name": "tcp-9153",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 5,
                  "httpGet": {
                    "path": "/ready",
                    "port": 8181,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "add": [
                      "NET_BIND_SERVICE"
                    ]
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/coredns",
                    "name": "config-volume"
                  }
                ]
              }
            ],
            "dnsPolicy": "Default",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "coredns",
            "serviceAccountName": "coredns",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "key": "node-role.kubernetes.io/etcd",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "items": [
                    {
                      "key": "Corefile",
                      "path": "Corefile"
                    }
                  ],
                  "name": "rke2-coredns-rke2-coredns"
                },
                "name": "config-volume"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:23:56Z",
            "lastUpdateTime": "2025-05-21T08:23:56Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:23:56Z",
            "lastUpdateTime": "2025-05-21T08:25:08Z",
            "message": "ReplicaSet \"rke2-coredns-rke2-coredns-74cf8ffff9\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "rke2-coredns",
          "meta.helm.sh/release-namespace": "kube-system"
        },
        "creationTimestamp": "2025-05-21T08:23:56Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "rke2-coredns",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "rke2-coredns-autoscaler",
          "helm.sh/chart": "rke2-coredns-1.36.102",
          "k8s-app": "kube-dns-autoscaler",
          "kubernetes.io/cluster-service": "true",
          "kubernetes.io/name": "CoreDNS"
        },
        "name": "rke2-coredns-rke2-coredns-autoscaler",
        "namespace": "kube-system",
        "resourceVersion": "1491",
        "uid": "1da80014-8ba6-47bd-b73b-6182279b59e2"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "rke2-coredns",
            "app.kubernetes.io/name": "rke2-coredns-autoscaler",
            "k8s-app": "kube-dns-autoscaler"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/configmap": "d60c659bb6f110566bd0fbf3790329616e515b66113912d662d043ce8f73300b",
              "scheduler.alpha.kubernetes.io/tolerations": "[{\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "rke2-coredns",
              "app.kubernetes.io/name": "rke2-coredns-autoscaler",
              "k8s-app": "kube-dns-autoscaler"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "/cluster-proportional-autoscaler",
                  "--namespace=kube-system",
                  "--configmap=rke2-coredns-rke2-coredns-autoscaler",
                  "--target=Deployment/rke2-coredns-rke2-coredns",
                  "--logtostderr=true",
                  "--v=2"
                ],
                "image": "rancher/hardened-cluster-autoscaler:v1.9.0-build20241126",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "name": "autoscaler",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "25m",
                    "memory": "16Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "rke2-coredns-rke2-coredns-autoscaler",
            "serviceAccountName": "rke2-coredns-rke2-coredns-autoscaler",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "key": "node-role.kubernetes.io/etcd",
                "operator": "Exists"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:24:35Z",
            "lastUpdateTime": "2025-05-21T08:24:35Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:23:56Z",
            "lastUpdateTime": "2025-05-21T08:24:35Z",
            "message": "ReplicaSet \"rke2-coredns-rke2-coredns-autoscaler-54d9db4d7f\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "rke2-metrics-server",
          "meta.helm.sh/release-namespace": "kube-system"
        },
        "creationTimestamp": "2025-05-21T08:24:31Z",
        "generation": 1,
        "labels": {
          "app": "rke2-metrics-server",
          "app.kubernetes.io/instance": "rke2-metrics-server",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "rke2-metrics-server",
          "app.kubernetes.io/version": "0.7.2",
          "helm.sh/chart": "rke2-metrics-server-3.12.200"
        },
        "name": "rke2-metrics-server",
        "namespace": "kube-system",
        "resourceVersion": "1603",
        "uid": "8df1d67a-1dad-4d95-86b8-829f9b7a2658"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "rke2-metrics-server",
            "app.kubernetes.io/instance": "rke2-metrics-server",
            "app.kubernetes.io/name": "rke2-metrics-server"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "rke2-metrics-server",
              "app.kubernetes.io/instance": "rke2-metrics-server",
              "app.kubernetes.io/name": "rke2-metrics-server"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--secure-port=10250",
                  "--cert-dir=/tmp",
                  "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                  "--kubelet-use-node-status-port",
                  "--metric-resolution=15s"
                ],
                "image": "rancher/hardened-k8s-metrics-server:v0.7.2-build20250110",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/livez",
                    "port": "https",
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "metrics-server",
                "ports": [
                  {
                    "containerPort": 10250,
                    "name": "https",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/readyz",
                    "port": "https",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "runAsUser": 1000,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/tmp",
                    "name": "tmp"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "rke2-metrics-server",
            "serviceAccountName": "rke2-metrics-server",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "emptyDir": {},
                "name": "tmp"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:25:01Z",
            "lastUpdateTime": "2025-05-21T08:25:01Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:24:31Z",
            "lastUpdateTime": "2025-05-21T08:25:01Z",
            "message": "ReplicaSet \"rke2-metrics-server-6b956496d6\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "rke2-snapshot-controller",
          "meta.helm.sh/release-namespace": "kube-system"
        },
        "creationTimestamp": "2025-05-21T08:24:31Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "rke2-snapshot-controller",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "rke2-snapshot-controller",
          "app.kubernetes.io/version": "v8.2.0",
          "helm.sh/chart": "rke2-snapshot-controller-4.0.002"
        },
        "name": "rke2-snapshot-controller",
        "namespace": "kube-system",
        "resourceVersion": "1522",
        "uid": "8397d271-9144-4b5d-9334-a0d465e8af50"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "rke2-snapshot-controller",
            "app.kubernetes.io/name": "rke2-snapshot-controller"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "rke2-snapshot-controller",
              "app.kubernetes.io/name": "rke2-snapshot-controller"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--http-endpoint=:8080",
                  "--leader-election=true",
                  "--leader-election-namespace=$(NAMESPACE)"
                ],
                "env": [
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "image": "rancher/mirrored-sig-storage-snapshot-controller:v8.2.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz/leader-election",
                    "port": "http",
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "rke2-snapshot-controller",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz/leader-election",
                    "port": "http",
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "runAsUser": 1000
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "rke2-snapshot-controller",
            "serviceAccountName": "rke2-snapshot-controller",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "key": "node-role.kubernetes.io/etcd",
                "operator": "Exists"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:24:39Z",
            "lastUpdateTime": "2025-05-21T08:24:39Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:24:31Z",
            "lastUpdateTime": "2025-05-21T08:24:39Z",
            "message": "ReplicaSet \"rke2-snapshot-controller-84b6dfd89c\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
          "meta.helm.sh/release-namespace": "nfd",
          "objectset.rio.cattle.io/id": "default-b-b327a8dc-2351-59fc-8ebe-3d002451a1c7"
        },
        "creationTimestamp": "2025-05-21T08:27:09Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "node-feature-discovery",
          "app.kubernetes.io/version": "v0.17.0",
          "helm.sh/chart": "node-feature-discovery-0.17.0",
          "objectset.rio.cattle.io/hash": "743c09b690d6a549a11a9009615af71ab9363d04",
          "role": "master"
        },
        "name": "nfd-master",
        "namespace": "nfd",
        "resourceVersion": "2464",
        "uid": "63028ead-24bb-4793-af59-5f3c671e1683"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
            "app.kubernetes.io/name": "node-feature-discovery",
            "role": "master"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "95f9fc73f21b30114b4ca055ebda958aca6a77160c08fe5e4b4e8cb04819ab02"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
              "app.kubernetes.io/name": "node-feature-discovery",
              "role": "master"
            }
          },
          "spec": {
            "affinity": {
              "nodeAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "preference": {
                      "matchExpressions": [
                        {
                          "key": "node-role.kubernetes.io/master",
                          "operator": "In",
                          "values": [
                            ""
                          ]
                        }
                      ]
                    },
                    "weight": 1
                  },
                  {
                    "preference": {
                      "matchExpressions": [
                        {
                          "key": "node-role.kubernetes.io/control-plane",
                          "operator": "In",
                          "values": [
                            ""
                          ]
                        }
                      ]
                    },
                    "weight": 1
                  }
                ]
              }
            },
            "containers": [
              {
                "args": [
                  "-enable-leader-election",
                  "-feature-gates=NodeFeatureGroupAPI=false",
                  "-metrics=8081",
                  "-grpc-health=8082"
                ],
                "command": [
                  "nfd-master"
                ],
                "env": [
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "image": "registry.k8s.io/nfd/node-feature-discovery:v0.17.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "grpc": {
                    "port": 8082,
                    "service": ""
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "master",
                "ports": [
                  {
                    "containerPort": 8081,
                    "name": "metrics",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8082,
                    "name": "health",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 10,
                  "grpc": {
                    "port": 8082,
                    "service": ""
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "startupProbe": {
                  "failureThreshold": 30,
                  "grpc": {
                    "port": 8082,
                    "service": ""
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/kubernetes/node-feature-discovery",
                    "name": "nfd-master-conf",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": false,
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "nfd",
            "serviceAccountName": "nfd",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Equal"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/control-plane",
                "operator": "Equal"
              }
            ],
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "items": [
                    {
                      "key": "nfd-master.conf",
                      "path": "nfd-master.conf"
                    }
                  ],
                  "name": "nfd-master-conf"
                },
                "name": "nfd-master-conf"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:27:19Z",
            "lastUpdateTime": "2025-05-21T08:27:19Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:09Z",
            "lastUpdateTime": "2025-05-21T08:27:19Z",
            "message": "ReplicaSet \"nfd-master-78678456d6\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703",
          "meta.helm.sh/release-namespace": "observability",
          "objectset.rio.cattle.io/id": "default-b-e5f99bae-9de1-5686-bee3-61fbdccc8703"
        },
        "creationTimestamp": "2025-05-21T08:27:34Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "telegraf",
          "helm.sh/chart": "telegraf-1.8.55",
          "objectset.rio.cattle.io/hash": "4a33cedc8c71dc5f6db23a49573e15b0102f5f81"
        },
        "name": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703-telegraf",
        "namespace": "observability",
        "resourceVersion": "3937",
        "uid": "eb443265-7ff8-4626-8f97-53e631cc7324"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703",
            "app.kubernetes.io/name": "telegraf"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "2ae791fa618bb4cabe2e1b3c67fa5f083b6b1775b66a7b30b52fd16cd3c17e60"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703",
              "app.kubernetes.io/name": "telegraf"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--config=/etc/telegraf/base-ext-telegraf.conf"
                ],
                "env": [
                  {
                    "name": "HOSTNAME",
                    "value": "telegraf-polling-service"
                  }
                ],
                "image": "docker.io/library/telegraf:1.32-alpine",
                "imagePullPolicy": "IfNotPresent",
                "name": "telegraf",
                "ports": [
                  {
                    "containerPort": 9105,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/telegraf",
                    "name": "config"
                  },
                  {
                    "mountPath": "/etc/telegraf/",
                    "name": "telegraf-config",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/opt/telegraf/certs",
                    "name": "certs"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703-telegraf",
            "serviceAccountName": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703-telegraf",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "b-e5f99bae-9de1-5686-bee3-61fbdccc8703-telegraf"
                },
                "name": "config"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "telegraf-config"
                },
                "name": "telegraf-config"
              },
              {
                "name": "certs",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "telegraf-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:28:48Z",
            "lastUpdateTime": "2025-05-21T08:28:48Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:34Z",
            "lastUpdateTime": "2025-05-21T08:28:48Z",
            "message": "ReplicaSet \"b-e5f99bae-9de1-5686-bee3-61fbdccc8703-telegraf-85bc7ff9cd\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-049a340d-8f21-5664-9596-72ac69b6678e",
          "meta.helm.sh/release-namespace": "observability",
          "objectset.rio.cattle.io/id": "default-b-049a340d-8f21-5664-9596-72ac69b6678e"
        },
        "creationTimestamp": "2025-05-21T08:27:38Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/component": "metrics",
          "app.kubernetes.io/instance": "b-049a340d-8f21-5664-9596-72ac69b6678e",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "kube-state-metrics",
          "app.kubernetes.io/part-of": "kube-state-metrics",
          "app.kubernetes.io/version": "2.15.0",
          "helm.sh/chart": "kube-state-metrics-5.31.0",
          "objectset.rio.cattle.io/hash": "628984c390fc35ac5529401ef706b57a24c1f16b",
          "release": "b-049a340d-8f21-5664-9596-72ac69b6678e"
        },
        "name": "kube-state-metrics",
        "namespace": "observability",
        "resourceVersion": "4124",
        "uid": "b6bbbd76-c1de-4312-85d7-826a2ae13926"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-049a340d-8f21-5664-9596-72ac69b6678e",
            "app.kubernetes.io/name": "kube-state-metrics"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "b-049a340d-8f21-5664-9596-72ac69b6678e",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kube-state-metrics",
              "app.kubernetes.io/part-of": "kube-state-metrics",
              "app.kubernetes.io/version": "2.15.0",
              "helm.sh/chart": "kube-state-metrics-5.31.0",
              "release": "b-049a340d-8f21-5664-9596-72ac69b6678e"
            }
          },
          "spec": {
            "automountServiceAccountToken": true,
            "containers": [
              {
                "args": [
                  "--host=127.0.0.1",
                  "--port=9090",
                  "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments",
                  "--telemetry-host=127.0.0.1",
                  "--telemetry-port=9091"
                ],
                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/livez",
                    "port": 8080,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "kube-state-metrics",
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/readyz",
                    "port": 8081,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "32Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              },
              {
                "args": [
                  "--tls-cert-file=/etc/tls/tls.crt",
                  "--tls-private-key-file=/etc/tls/tls.key",
                  "--client-ca-file=/etc/tls/ca.crt",
                  "--ignore-paths=/livez,/readyz",
                  "--secure-listen-address=:8080",
                  "--upstream=http://127.0.0.1:9090/",
                  "--proxy-endpoints-port=8888",
                  "--config-file=/etc/kube-rbac-proxy-config/config-file.yaml"
                ],
                "image": "quay.io/brancz/kube-rbac-proxy:v0.19.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "kube-rbac-proxy-http",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8888,
                    "name": "http-healthz",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "healthz",
                    "port": 8888,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "32Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/kube-rbac-proxy-config",
                    "name": "kube-rbac-proxy-config"
                  },
                  {
                    "mountPath": "/etc/tls",
                    "name": "kube-state-rbac-proxy-tls",
                    "readOnly": true
                  }
                ]
              },
              {
                "args": [
                  "--tls-cert-file=/etc/tls/tls.crt",
                  "--tls-private-key-file=/etc/tls/tls.key",
                  "--client-ca-file=/etc/tls/ca.crt",
                  "--ignore-paths=/livez,/readyz",
                  "--secure-listen-address=:8081",
                  "--upstream=http://127.0.0.1:9091/",
                  "--proxy-endpoints-port=8889",
                  "--config-file=/etc/kube-rbac-proxy-config/config-file.yaml"
                ],
                "image": "quay.io/brancz/kube-rbac-proxy:v0.19.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "kube-rbac-proxy-telemetry",
                "ports": [
                  {
                    "containerPort": 8081,
                    "name": "metrics",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8889,
                    "name": "metrics-healthz",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "healthz",
                    "port": 8889,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "32Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/kube-rbac-proxy-config",
                    "name": "kube-rbac-proxy-config"
                  },
                  {
                    "mountPath": "/etc/tls",
                    "name": "kube-state-rbac-proxy-tls",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 65534,
              "runAsGroup": 65534,
              "runAsNonRoot": true,
              "runAsUser": 65534,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "serviceAccount": "kube-state-metrics",
            "serviceAccountName": "kube-state-metrics",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "kube-state-metrics-rbac-config"
                },
                "name": "kube-rbac-proxy-config"
              },
              {
                "name": "kube-state-rbac-proxy-tls",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "kube-state-rbac-proxy-tls"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:29:02Z",
            "lastUpdateTime": "2025-05-21T08:29:02Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:38Z",
            "lastUpdateTime": "2025-05-21T08:29:02Z",
            "message": "ReplicaSet \"kube-state-metrics-75bb6889bd\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-049a340d-8f21-5664-9596-72ac69b6678e",
          "meta.helm.sh/release-namespace": "observability",
          "objectset.rio.cattle.io/id": "default-b-049a340d-8f21-5664-9596-72ac69b6678e"
        },
        "creationTimestamp": "2025-05-21T08:27:38Z",
        "generation": 1,
        "labels": {
          "app": "kube-prometheus-stack-operator",
          "app.kubernetes.io/component": "prometheus-operator",
          "app.kubernetes.io/instance": "b-049a340d-8f21-5664-9596-72ac69b6678e",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "kube-prometheus-stack-prometheus-operator",
          "app.kubernetes.io/part-of": "kube-prometheus-stack",
          "app.kubernetes.io/version": "70.3.0",
          "chart": "kube-prometheus-stack-70.3.0",
          "heritage": "Helm",
          "objectset.rio.cattle.io/hash": "628984c390fc35ac5529401ef706b57a24c1f16b",
          "release": "b-049a340d-8f21-5664-9596-72ac69b6678e"
        },
        "name": "prometheus-operator",
        "namespace": "observability",
        "resourceVersion": "2928",
        "uid": "0360f836-222f-4bec-b6d4-d7d8091572b4"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "kube-prometheus-stack-operator",
            "release": "b-049a340d-8f21-5664-9596-72ac69b6678e"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "kube-prometheus-stack-operator",
              "app.kubernetes.io/component": "prometheus-operator",
              "app.kubernetes.io/instance": "b-049a340d-8f21-5664-9596-72ac69b6678e",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kube-prometheus-stack-prometheus-operator",
              "app.kubernetes.io/part-of": "kube-prometheus-stack",
              "app.kubernetes.io/version": "70.3.0",
              "chart": "kube-prometheus-stack-70.3.0",
              "heritage": "Helm",
              "release": "b-049a340d-8f21-5664-9596-72ac69b6678e"
            }
          },
          "spec": {
            "automountServiceAccountToken": true,
            "containers": [
              {
                "args": [
                  "--kubelet-service=kube-system/prometheus-kubelet",
                  "--kubelet-endpoints=true",
                  "--kubelet-endpointslice=false",
                  "--localhost=127.0.0.1",
                  "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
                  "--config-reloader-cpu-request=0",
                  "--config-reloader-cpu-limit=0",
                  "--config-reloader-memory-request=0",
                  "--config-reloader-memory-limit=0",
                  "--thanos-default-base-image=quay.io/thanos/thanos:v0.37.2",
                  "--secret-field-selector=type!=kubernetes.io/dockercfg,type!=kubernetes.io/service-account-token,type!=helm.sh/release.v1",
                  "--web.enable-tls=true",
                  "--web.cert-file=/cert/tls.crt",
                  "--web.key-file=/cert/tls.key",
                  "--web.listen-address=:10250",
                  "--web.tls-min-version=VersionTLS13"
                ],
                "env": [
                  {
                    "name": "GOGC",
                    "value": "30"
                  }
                ],
                "image": "quay.io/prometheus-operator/prometheus-operator:v0.81.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": "https",
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "kube-prometheus-stack",
                "ports": [
                  {
                    "containerPort": 10250,
                    "name": "https",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": "https",
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "200Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "100Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/cert",
                    "name": "tls-secret",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 65534,
              "runAsGroup": 65534,
              "runAsNonRoot": true,
              "runAsUser": 65534,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "serviceAccount": "prometheus-operator",
            "serviceAccountName": "prometheus-operator",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "name": "tls-secret",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-admission"
                }
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:27:43Z",
            "lastUpdateTime": "2025-05-21T08:27:43Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:27:38Z",
            "lastUpdateTime": "2025-05-21T08:27:43Z",
            "message": "ReplicaSet \"prometheus-operator-7bcdfb54b6\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
          "meta.helm.sh/release-namespace": "openebs",
          "objectset.rio.cattle.io/id": "default-b-247e96ca-49bb-52ed-8f13-48029460c41d"
        },
        "creationTimestamp": "2025-05-21T08:28:50Z",
        "generation": 1,
        "labels": {
          "app": "localpv-provisioner",
          "app.kubernetes.io/managed-by": "Helm",
          "chart": "localpv-provisioner-4.2.0",
          "component": "localpv-provisioner",
          "heritage": "Helm",
          "objectset.rio.cattle.io/hash": "55a882ec3ec1115ad36c4103fe0a67004eae27b8",
          "openebs.io/component-name": "openebs-localpv-provisioner",
          "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d"
        },
        "name": "b-247e96ca-49bb-52ed-8f13-48029460c41d-localpv-provisioner",
        "namespace": "openebs",
        "resourceVersion": "4076",
        "uid": "6c1b3359-3bc3-48a6-8b44-dffc0cc65c56"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "localpv-provisioner",
            "component": "localpv-provisioner",
            "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d"
          }
        },
        "strategy": {
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "localpv-provisioner",
              "chart": "localpv-provisioner-4.2.0",
              "component": "localpv-provisioner",
              "heritage": "Helm",
              "name": "openebs-localpv-provisioner",
              "openebs.io/component-name": "openebs-localpv-provisioner",
              "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "OPENEBS_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "OPENEBS_SERVICE_ACCOUNT",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.serviceAccountName"
                      }
                    }
                  },
                  {
                    "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                    "value": "true"
                  },
                  {
                    "name": "OPENEBS_IO_BASE_PATH",
                    "value": "/var/openebs/local"
                  },
                  {
                    "name": "OPENEBS_IO_HELPER_IMAGE",
                    "value": "openebs/linux-utils:4.1.0"
                  },
                  {
                    "name": "OPENEBS_IO_HELPER_POD_HOST_NETWORK",
                    "value": "false"
                  },
                  {
                    "name": "OPENEBS_IO_INSTALLER_TYPE",
                    "value": "localpv-charts-helm"
                  },
                  {
                    "name": "LEADER_ELECTION_ENABLED",
                    "value": "true"
                  }
                ],
                "image": "openebs/provisioner-localpv:4.2.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "exec": {
                    "command": [
                      "sh",
                      "-c",
                      "test `pgrep -c \"^provisioner-loc.*\"` = 1"
                    ]
                  },
                  "failureThreshold": 3,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 60,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "b-247e96ca-49bb-52ed-8f13-48029460c41d-localpv-provisioner",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "b-247e96ca-49bb-52ed-8f13-48029460c41d-localpv-provisioner",
            "serviceAccountName": "b-247e96ca-49bb-52ed-8f13-48029460c41d-localpv-provisioner",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "tolerationSeconds": 5
              },
              {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "tolerationSeconds": 5
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:28:56Z",
            "lastUpdateTime": "2025-05-21T08:28:56Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:28:50Z",
            "lastUpdateTime": "2025-05-21T08:28:56Z",
            "message": "ReplicaSet \"b-247e96ca-49bb-52ed-8f13-48029460c41d-localpv-provisioner-65db646c7c\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
          "meta.helm.sh/release-namespace": "openebs",
          "objectset.rio.cattle.io/id": "default-b-247e96ca-49bb-52ed-8f13-48029460c41d"
        },
        "creationTimestamp": "2025-05-21T08:28:50Z",
        "generation": 1,
        "labels": {
          "app": "openebs-lvm-controller",
          "app.kubernetes.io/managed-by": "Helm",
          "chart": "lvm-localpv-1.6.2",
          "component": "openebs-lvm-controller",
          "heritage": "Helm",
          "objectset.rio.cattle.io/hash": "55a882ec3ec1115ad36c4103fe0a67004eae27b8",
          "openebs.io/component-name": "openebs-lvm-controller",
          "openebs.io/version": "1.6.1",
          "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
          "role": "openebs-lvm"
        },
        "name": "b-247e96ca-49bb-52ed-8f13-48029460c41d-lvm-localpv-controller",
        "namespace": "openebs",
        "resourceVersion": "4137",
        "uid": "afae6295-64fd-4731-96db-621f146c49a0"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "openebs-lvm-controller",
            "component": "openebs-lvm-controller",
            "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "openebs-lvm-controller",
              "chart": "lvm-localpv-1.6.2",
              "component": "openebs-lvm-controller",
              "heritage": "Helm",
              "name": "openebs-lvm-controller",
              "openebs.io/component-name": "openebs-lvm-controller",
              "openebs.io/version": "1.6.1",
              "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
              "role": "openebs-lvm"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--v=5",
                  "--csi-address=$(ADDRESS)"
                ],
                "env": [
                  {
                    "name": "ADDRESS",
                    "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                  }
                ],
                "image": "registry.k8s.io/sig-storage/csi-resizer:v1.8.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                    "name": "socket-dir"
                  }
                ]
              },
              {
                "args": [
                  "--csi-address=$(ADDRESS)"
                ],
                "env": [
                  {
                    "name": "ADDRESS",
                    "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                  }
                ],
                "image": "registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2",
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                    "name": "socket-dir"
                  }
                ]
              },
              {
                "args": [
                  "--v=5"
                ],
                "image": "registry.k8s.io/sig-storage/snapshot-controller:v6.2.2",
                "imagePullPolicy": "IfNotPresent",
                "name": "snapshot-controller",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File"
              },
              {
                "args": [
                  "--csi-address=$(ADDRESS)",
                  "--v=5",
                  "--feature-gates=Topology=true",
                  "--strict-topology",
                  "--enable-capacity=true",
                  "--extra-create-metadata=true",
                  "--default-fstype=ext4"
                ],
                "env": [
                  {
                    "name": "ADDRESS",
                    "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "image": "registry.k8s.io/sig-storage/csi-provisioner:v3.5.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                    "name": "socket-dir"
                  }
                ]
              },
              {
                "args": [
                  "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                  "--plugin=$(OPENEBS_CONTROLLER_DRIVER)",
                  "--kube-api-qps=0",
                  "--kube-api-burst=0"
                ],
                "env": [
                  {
                    "name": "OPENEBS_CONTROLLER_DRIVER",
                    "value": "controller"
                  },
                  {
                    "name": "OPENEBS_CSI_ENDPOINT",
                    "value": "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
                  },
                  {
                    "name": "LVM_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "OPENEBS_IO_INSTALLER_TYPE",
                    "value": "lvm-localpv-helm"
                  },
                  {
                    "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                    "value": "true"
                  }
                ],
                "image": "openebs/lvm-driver:1.6.1",
                "imagePullPolicy": "IfNotPresent",
                "name": "openebs-lvm-plugin",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                    "name": "socket-dir"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "priorityClassName": "b-247e96ca-49bb-52ed-8f13-48029460c41d-lvm-localpv-csi-controll",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "openebs-lvm-controller-sa",
            "serviceAccountName": "openebs-lvm-controller-sa",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "emptyDir": {},
                "name": "socket-dir"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:29:02Z",
            "lastUpdateTime": "2025-05-21T08:29:02Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:28:50Z",
            "lastUpdateTime": "2025-05-21T08:29:02Z",
            "message": "ReplicaSet \"b-247e96ca-49bb-52ed-8f13-48029460c41d-lvm-localpv-controller-646677c7f9\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "rke2-calico",
          "meta.helm.sh/release-namespace": "kube-system"
        },
        "creationTimestamp": "2025-05-21T08:23:57Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/managed-by": "Helm",
          "k8s-app": "tigera-operator"
        },
        "name": "tigera-operator",
        "namespace": "tigera-operator",
        "resourceVersion": "876",
        "uid": "60e4eacc-4012-447d-8c44-d05792e1672b"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "name": "tigera-operator"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": "25%"
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "k8s-app": "tigera-operator",
              "name": "tigera-operator"
            }
          },
          "spec": {
            "containers": [
              {
                "command": [
                  "operator"
                ],
                "env": [
                  {
                    "name": "WATCH_NAMESPACE"
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "OPERATOR_NAME",
                    "value": "tigera-operator"
                  },
                  {
                    "name": "TIGERA_OPERATOR_INIT_IMAGE_VERSION",
                    "value": "v1.36.5"
                  }
                ],
                "envFrom": [
                  {
                    "configMapRef": {
                      "name": "kubernetes-services-endpoint",
                      "optional": true
                    }
                  }
                ],
                "image": "docker.io/rancher/mirrored-calico-operator:v1.36.5",
                "imagePullPolicy": "IfNotPresent",
                "name": "tigera-operator",
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/calico",
                    "name": "var-lib-calico",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirstWithHostNet",
            "hostNetwork": true,
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "tigera-operator",
            "serviceAccountName": "tigera-operator",
            "terminationGracePeriodSeconds": 60,
            "tolerations": [
              {
                "effect": "NoExecute",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/var/lib/calico",
                  "type": ""
                },
                "name": "var-lib-calico"
              }
            ]
          }
        }
      },
      "status": {
        "availableReplicas": 1,
        "conditions": [
          {
            "lastTransitionTime": "2025-05-21T08:24:03Z",
            "lastUpdateTime": "2025-05-21T08:24:03Z",
            "message": "Deployment has minimum availability.",
            "reason": "MinimumReplicasAvailable",
            "status": "True",
            "type": "Available"
          },
          {
            "lastTransitionTime": "2025-05-21T08:23:57Z",
            "lastUpdateTime": "2025-05-21T08:24:03Z",
            "message": "ReplicaSet \"tigera-operator-69786c6bb8\" has successfully progressed.",
            "reason": "NewReplicaSetAvailable",
            "status": "True",
            "type": "Progressing"
          }
        ],
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "annotations": {
          "meta.helm.sh/release-name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
          "meta.helm.sh/release-namespace": "deployment-s6z6f",
          "objectset.rio.cattle.io/id": "default-b-cd27eacc-fea7-5e38-8248-2892c66f8954"
        },
        "creationTimestamp": "2025-05-21T08:35:53Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/component": "primary",
          "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "mariadb",
          "app.kubernetes.io/version": "11.2.2",
          "helm.sh/chart": "mariadb-15.2.3",
          "objectset.rio.cattle.io/hash": "be35023621db4fb7330d36a6161c8f53660b66d0"
        },
        "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb",
        "namespace": "deployment-s6z6f",
        "resourceVersion": "6519",
        "uid": "ad24d06d-d060-41c6-bf7c-8d41cfeed0de"
      },
      "spec": {
        "persistentVolumeClaimRetentionPolicy": {
          "whenDeleted": "Retain",
          "whenScaled": "Retain"
        },
        "podManagementPolicy": "OrderedReady",
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
            "app.kubernetes.io/name": "mariadb"
          }
        },
        "serviceName": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb",
        "template": {
          "metadata": {
            "annotations": {
              "checksum/configuration": "c41ddf5ad2fda011499908f96a4322c5f6d1d1713c97100e36756f0ac1e067a8"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/component": "primary",
              "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "mariadb",
              "app.kubernetes.io/version": "11.2.2",
              "helm.sh/chart": "mariadb-15.2.3"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/component": "primary",
                          "app.kubernetes.io/instance": "b-cd27eacc-fea7-5e38-8248-2892c66f8954",
                          "app.kubernetes.io/name": "mariadb"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 1
                  }
                ]
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "env": [
                  {
                    "name": "BITNAMI_DEBUG",
                    "value": "false"
                  },
                  {
                    "name": "MARIADB_ROOT_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "mariadb-root-password",
                        "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb"
                      }
                    }
                  },
                  {
                    "name": "MARIADB_USER",
                    "value": "bn_wordpress"
                  },
                  {
                    "name": "MARIADB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "mariadb-password",
                        "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb"
                      }
                    }
                  },
                  {
                    "name": "MARIADB_DATABASE",
                    "value": "bitnami_wordpress"
                  }
                ],
                "image": "registry-1.docker.io/bitnami/mariadb:11.2.2-debian-11-r6",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-ec",
                      "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                    ]
                  },
                  "failureThreshold": 3,
                  "initialDelaySeconds": 120,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "mariadb",
                "ports": [
                  {
                    "containerPort": 3306,
                    "name": "mysql",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-ec",
                      "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                    ]
                  },
                  "failureThreshold": 3,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "runAsNonRoot": true,
                  "runAsUser": 1001,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/bitnami/mariadb",
                    "name": "data"
                  },
                  {
                    "mountPath": "/opt/bitnami/mariadb/conf/my.cnf",
                    "name": "config",
                    "subPath": "my.cnf"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 1001,
              "fsGroupChangePolicy": "Always"
            },
            "serviceAccount": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb",
            "serviceAccountName": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb"
                },
                "name": "config"
              },
              {
                "emptyDir": {},
                "name": "data"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate"
        }
      },
      "status": {
        "availableReplicas": 1,
        "collisionCount": 0,
        "currentReplicas": 1,
        "currentRevision": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb-8467fdf5b6",
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updateRevision": "b-cd27eacc-fea7-5e38-8248-2892c66f8954-mariadb-8467fdf5b6",
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "annotations": {
          "meta.helm.sh/release-name": "b-049a340d-8f21-5664-9596-72ac69b6678e",
          "meta.helm.sh/release-namespace": "observability",
          "objectset.rio.cattle.io/id": "default-b-049a340d-8f21-5664-9596-72ac69b6678e",
          "prometheus-operator-input-hash": "17372372117278996851"
        },
        "creationTimestamp": "2025-05-21T08:28:07Z",
        "generation": 1,
        "labels": {
          "app": "kube-prometheus-stack-prometheus",
          "app.kubernetes.io/instance": "b-049a340d-8f21-5664-9596-72ac69b6678e",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/part-of": "kube-prometheus-stack",
          "app.kubernetes.io/version": "70.3.0",
          "chart": "kube-prometheus-stack-70.3.0",
          "heritage": "Helm",
          "managed-by": "prometheus-operator",
          "objectset.rio.cattle.io/hash": "628984c390fc35ac5529401ef706b57a24c1f16b",
          "operator.prometheus.io/mode": "server",
          "operator.prometheus.io/name": "prometheus-prometheus",
          "operator.prometheus.io/shard": "0",
          "release": "b-049a340d-8f21-5664-9596-72ac69b6678e"
        },
        "name": "prometheus-prometheus-prometheus",
        "namespace": "observability",
        "ownerReferences": [
          {
            "apiVersion": "monitoring.coreos.com/v1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "Prometheus",
            "name": "prometheus-prometheus",
            "uid": "22746e59-e81f-4478-8219-76c8d45bd850"
          }
        ],
        "resourceVersion": "4352",
        "uid": "8c00dc86-12d2-4868-8dd0-bda5e9af0983"
      },
      "spec": {
        "persistentVolumeClaimRetentionPolicy": {
          "whenDeleted": "Retain",
          "whenScaled": "Retain"
        },
        "podManagementPolicy": "Parallel",
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "prometheus-prometheus",
            "app.kubernetes.io/managed-by": "prometheus-operator",
            "app.kubernetes.io/name": "prometheus",
            "operator.prometheus.io/name": "prometheus-prometheus",
            "operator.prometheus.io/shard": "0",
            "prometheus": "prometheus-prometheus"
          }
        },
        "serviceName": "prometheus-operated",
        "template": {
          "metadata": {
            "annotations": {
              "kubectl.kubernetes.io/default-container": "prometheus"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "prometheus-prometheus",
              "app.kubernetes.io/managed-by": "prometheus-operator",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/version": "3.2.1",
              "operator.prometheus.io/name": "prometheus-prometheus",
              "operator.prometheus.io/shard": "0",
              "prometheus": "prometheus-prometheus"
            }
          },
          "spec": {
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app.kubernetes.io/name",
                            "operator": "In",
                            "values": [
                              "prometheus"
                            ]
                          },
                          {
                            "key": "prometheus",
                            "operator": "In",
                            "values": [
                              "prometheus-prometheus"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  }
                ]
              }
            },
            "automountServiceAccountToken": true,
            "containers": [
              {
                "args": [
                  "--web.console.templates=/etc/prometheus/consoles",
                  "--web.console.libraries=/etc/prometheus/console_libraries",
                  "--config.file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--web.enable-lifecycle",
                  "--web.external-url=http://prometheus-prometheus.observability:9090",
                  "--web.route-prefix=/",
                  "--storage.tsdb.retention.time=15d",
                  "--storage.tsdb.path=/prometheus",
                  "--storage.tsdb.wal-compression",
                  "--web.config.file=/etc/prometheus/web_config/web-config.yaml"
                ],
                "image": "quay.io/prometheus/prometheus:v3.2.1",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 6,
                  "httpGet": {
                    "path": "/-/healthy",
                    "port": "http-web",
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 3
                },
                "name": "prometheus",
                "ports": [
                  {
                    "containerPort": 9090,
                    "name": "http-web",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/-/ready",
                    "port": "http-web",
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 3
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "startupProbe": {
                  "failureThreshold": 60,
                  "httpGet": {
                    "path": "/-/ready",
                    "port": "http-web",
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 15,
                  "successThreshold": 1,
                  "timeoutSeconds": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/prometheus/config_out",
                    "name": "config-out",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/certs",
                    "name": "tls-assets",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/prometheus",
                    "name": "prometheus-volume",
                    "subPath": "prometheus-db"
                  },
                  {
                    "mountPath": "/etc/intel_edge_node/certs",
                    "name": "prometheus-tls",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/intel_edge_node/tokens/prometheus/access_token",
                    "name": "prometheus-token",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/ssl/certs",
                    "name": "ca-certificates",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/rules/prometheus-prometheus-prometheus-rulefiles-0",
                    "name": "prometheus-prometheus-prometheus-rulefiles-0"
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/web-config.yaml",
                    "name": "web-config",
                    "readOnly": true,
                    "subPath": "web-config.yaml"
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-key",
                    "name": "web-config-tls-secret-key-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-cert",
                    "name": "web-config-tls-secret-cert-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-ca",
                    "name": "web-config-tls-secret-client-ca-prometheus-tls-c4f3add3",
                    "readOnly": true
                  }
                ]
              },
              {
                "args": [
                  "--listen-address=:8080",
                  "--web-config-file=/etc/prometheus/web_config/web-config.yaml",
                  "--reload-url=https://127.0.0.1:9090/-/reload",
                  "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                  "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--watched-dir=/etc/prometheus/rules/prometheus-prometheus-prometheus-rulefiles-0"
                ],
                "command": [
                  "/bin/prometheus-config-reloader"
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "SHARD",
                    "value": "0"
                  }
                ],
                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "config-reloader",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "reloader-web",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/prometheus/config",
                    "name": "config"
                  },
                  {
                    "mountPath": "/etc/prometheus/config_out",
                    "name": "config-out"
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/web-config.yaml",
                    "name": "web-config",
                    "readOnly": true,
                    "subPath": "web-config.yaml"
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-key",
                    "name": "web-config-tls-secret-key-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-cert",
                    "name": "web-config-tls-secret-cert-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-ca",
                    "name": "web-config-tls-secret-client-ca-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/rules/prometheus-prometheus-prometheus-rulefiles-0",
                    "name": "prometheus-prometheus-prometheus-rulefiles-0"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "initContainers": [
              {
                "args": [
                  "--watch-interval=0",
                  "--listen-address=:8081",
                  "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                  "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--watched-dir=/etc/prometheus/rules/prometheus-prometheus-prometheus-rulefiles-0"
                ],
                "command": [
                  "/bin/prometheus-config-reloader"
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "SHARD",
                    "value": "0"
                  }
                ],
                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "init-config-reloader",
                "ports": [
                  {
                    "containerPort": 8081,
                    "name": "reloader-web",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/prometheus/config",
                    "name": "config"
                  },
                  {
                    "mountPath": "/etc/prometheus/config_out",
                    "name": "config-out"
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/web-config.yaml",
                    "name": "web-config",
                    "readOnly": true,
                    "subPath": "web-config.yaml"
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-key",
                    "name": "web-config-tls-secret-key-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-cert",
                    "name": "web-config-tls-secret-cert-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/web_config/secret/prometheus-tls-ca",
                    "name": "web-config-tls-secret-client-ca-prometheus-tls-c4f3add3",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/prometheus/rules/prometheus-prometheus-prometheus-rulefiles-0",
                    "name": "prometheus-prometheus-prometheus-rulefiles-0"
                  }
                ]
              },
              {
                "command": [
                  "/bin/chmod",
                  "-R",
                  "777",
                  "/data"
                ],
                "image": "busybox:1.35.0",
                "imagePullPolicy": "IfNotPresent",
                "name": "setup-permissions",
                "resources": {},
                "securityContext": {
                  "runAsGroup": 0,
                  "runAsNonRoot": false,
                  "runAsUser": 0
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/data",
                    "name": "prometheus-volume"
                  }
                ]
              }
            ],
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 2000,
              "runAsGroup": 500,
              "runAsNonRoot": true,
              "runAsUser": 501,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "serviceAccount": "prometheus-prometheus",
            "serviceAccountName": "prometheus-prometheus",
            "shareProcessNamespace": false,
            "terminationGracePeriodSeconds": 600,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "name": "config",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-prometheus-prometheus"
                }
              },
              {
                "name": "tls-assets",
                "projected": {
                  "defaultMode": 420,
                  "sources": [
                    {
                      "secret": {
                        "name": "prometheus-prometheus-prometheus-tls-assets-0"
                      }
                    }
                  ]
                }
              },
              {
                "emptyDir": {
                  "medium": "Memory"
                },
                "name": "config-out"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "prometheus-prometheus-prometheus-rulefiles-0"
                },
                "name": "prometheus-prometheus-prometheus-rulefiles-0"
              },
              {
                "name": "web-config",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-prometheus-prometheus-web-config"
                }
              },
              {
                "name": "web-config-tls-secret-key-prometheus-tls-c4f3add3",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-tls"
                }
              },
              {
                "name": "web-config-tls-secret-cert-prometheus-tls-c4f3add3",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-tls"
                }
              },
              {
                "name": "web-config-tls-secret-client-ca-prometheus-tls-c4f3add3",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-tls"
                }
              },
              {
                "name": "prometheus-tls",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "prometheus-tls"
                }
              },
              {
                "hostPath": {
                  "path": "/etc/intel_edge_node/tokens/prometheus/access_token",
                  "type": ""
                },
                "name": "prometheus-token"
              },
              {
                "hostPath": {
                  "path": "/etc/intel_edge_node/orch-ca-cert",
                  "type": ""
                },
                "name": "ca-certificates"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate"
        },
        "volumeClaimTemplates": [
          {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
              "creationTimestamp": null,
              "name": "prometheus-volume"
            },
            "spec": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "resources": {
                "requests": {
                  "storage": "10Gi"
                }
              },
              "storageClassName": "openebs-lvmpv",
              "volumeMode": "Filesystem"
            },
            "status": {
              "phase": "Pending"
            }
          }
        ]
      },
      "status": {
        "availableReplicas": 1,
        "collisionCount": 0,
        "currentReplicas": 1,
        "currentRevision": "prometheus-prometheus-prometheus-f7bcbf74c",
        "observedGeneration": 1,
        "readyReplicas": 1,
        "replicas": 1,
        "updateRevision": "prometheus-prometheus-prometheus-f7bcbf74c",
        "updatedReplicas": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "creationTimestamp": "2025-05-21T08:24:05Z",
        "generation": 1,
        "name": "calico-node",
        "namespace": "calico-system",
        "ownerReferences": [
          {
            "apiVersion": "operator.tigera.io/v1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "Installation",
            "name": "default",
            "uid": "f2dd5263-ed9a-4027-99dd-c3e7f00965dd"
          }
        ],
        "resourceVersion": "1499",
        "uid": "cf2bbd97-65a5-4a96-b78d-4f41b2320a80"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "k8s-app": "calico-node"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "hash.operator.tigera.io/cni-config": "67d9927589bcf84d027e873bcb62d5ee6677ab82",
              "hash.operator.tigera.io/system": "fdde45054a8ae4f629960ce37570929502e59449",
              "tigera-operator.hash.operator.tigera.io/tigera-ca-private": "396597a1921749571f8a036eee22ae5fe15500f0"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/name": "calico-node",
              "k8s-app": "calico-node"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "DATASTORE_TYPE",
                    "value": "kubernetes"
                  },
                  {
                    "name": "WAIT_FOR_DATASTORE",
                    "value": "true"
                  },
                  {
                    "name": "CLUSTER_TYPE",
                    "value": "k8s,operator"
                  },
                  {
                    "name": "CALICO_DISABLE_FILE_LOGGING",
                    "value": "false"
                  },
                  {
                    "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                    "value": "ACCEPT"
                  },
                  {
                    "name": "FELIX_HEALTHENABLED",
                    "value": "true"
                  },
                  {
                    "name": "FELIX_HEALTHPORT",
                    "value": "9099"
                  },
                  {
                    "name": "NODENAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "FELIX_TYPHAK8SNAMESPACE",
                    "value": "calico-system"
                  },
                  {
                    "name": "FELIX_TYPHAK8SSERVICENAME",
                    "value": "calico-typha"
                  },
                  {
                    "name": "FELIX_TYPHACAFILE",
                    "value": "/etc/pki/tls/certs/tigera-ca-bundle.crt"
                  },
                  {
                    "name": "FELIX_TYPHACERTFILE",
                    "value": "/node-certs/tls.crt"
                  },
                  {
                    "name": "FELIX_TYPHAKEYFILE",
                    "value": "/node-certs/tls.key"
                  },
                  {
                    "name": "FIPS_MODE_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "NO_DEFAULT_POOLS",
                    "value": "true"
                  },
                  {
                    "name": "FELIX_TYPHACN",
                    "value": "typha-server"
                  },
                  {
                    "name": "CALICO_MANAGE_CNI",
                    "value": "true"
                  },
                  {
                    "name": "CALICO_NETWORKING_BACKEND",
                    "value": "vxlan"
                  },
                  {
                    "name": "IP",
                    "value": "autodetect"
                  },
                  {
                    "name": "IP_AUTODETECTION_METHOD",
                    "value": "first-found"
                  },
                  {
                    "name": "IP6",
                    "value": "none"
                  },
                  {
                    "name": "FELIX_IPV6SUPPORT",
                    "value": "false"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "10.43.0.1"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "443"
                  }
                ],
                "image": "docker.io/rancher/mirrored-calico-node:v3.29.2",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/calico-node",
                        "-shutdown"
                      ]
                    }
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "host": "localhost",
                    "path": "/liveness",
                    "port": 9099,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 60,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "name": "calico-node",
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/calico-node",
                      "-felix-ready"
                    ]
                  },
                  "failureThreshold": 3,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": true,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": true,
                  "runAsGroup": 0,
                  "runAsNonRoot": false,
                  "runAsUser": 0,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/pki/tls/certs",
                    "name": "tigera-ca-bundle",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/pki/tls/cert.pem",
                    "name": "tigera-ca-bundle",
                    "readOnly": true,
                    "subPath": "ca-bundle.crt"
                  },
                  {
                    "mountPath": "/lib/modules",
                    "name": "lib-modules",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/run/xtables.lock",
                    "name": "xtables-lock"
                  },
                  {
                    "mountPath": "/var/run/nodeagent",
                    "name": "policysync"
                  },
                  {
                    "mountPath": "/node-certs",
                    "name": "node-certs",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/run/calico",
                    "name": "var-run-calico"
                  },
                  {
                    "mountPath": "/var/lib/calico",
                    "name": "var-lib-calico"
                  },
                  {
                    "mountPath": "/var/log/calico/cni",
                    "name": "cni-log-dir"
                  },
                  {
                    "mountPath": "/host/etc/cni/net.d",
                    "name": "cni-net-dir"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "hostNetwork": true,
            "initContainers": [
              {
                "image": "docker.io/rancher/mirrored-calico-pod2daemon-flexvol:v3.29.2",
                "imagePullPolicy": "IfNotPresent",
                "name": "flexvol-driver",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": true,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": true,
                  "runAsGroup": 0,
                  "runAsNonRoot": false,
                  "runAsUser": 0,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/driver",
                    "name": "flexvol-driver-host"
                  }
                ]
              },
              {
                "command": [
                  "/opt/cni/bin/install"
                ],
                "env": [
                  {
                    "name": "CNI_CONF_NAME",
                    "value": "10-calico.conflist"
                  },
                  {
                    "name": "SLEEP",
                    "value": "false"
                  },
                  {
                    "name": "CNI_NET_DIR",
                    "value": "/etc/cni/net.d"
                  },
                  {
                    "name": "CNI_NETWORK_CONFIG",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "config",
                        "name": "cni-config"
                      }
                    }
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "10.43.0.1"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "443"
                  }
                ],
                "image": "docker.io/rancher/mirrored-calico-cni:v3.29.2",
                "imagePullPolicy": "IfNotPresent",
                "name": "install-cni",
                "resources": {},
                "securityContext": {
                  "allowPrivilegeEscalation": true,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": true,
                  "runAsGroup": 0,
                  "runAsNonRoot": false,
                  "runAsUser": 0,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/opt/cni/bin",
                    "name": "cni-bin-dir"
                  },
                  {
                    "mountPath": "/host/etc/cni/net.d",
                    "name": "cni-net-dir"
                  }
                ]
              }
            ],
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "calico-node",
            "serviceAccountName": "calico-node",
            "terminationGracePeriodSeconds": 5,
            "tolerations": [
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/lib/modules",
                  "type": ""
                },
                "name": "lib-modules"
              },
              {
                "hostPath": {
                  "path": "/run/xtables.lock",
                  "type": "FileOrCreate"
                },
                "name": "xtables-lock"
              },
              {
                "hostPath": {
                  "path": "/var/run/nodeagent",
                  "type": "DirectoryOrCreate"
                },
                "name": "policysync"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "tigera-ca-bundle"
                },
                "name": "tigera-ca-bundle"
              },
              {
                "name": "node-certs",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "node-certs"
                }
              },
              {
                "hostPath": {
                  "path": "/var/run/calico",
                  "type": "DirectoryOrCreate"
                },
                "name": "var-run-calico"
              },
              {
                "hostPath": {
                  "path": "/var/lib/calico",
                  "type": "DirectoryOrCreate"
                },
                "name": "var-lib-calico"
              },
              {
                "hostPath": {
                  "path": "/opt/cni/bin",
                  "type": "DirectoryOrCreate"
                },
                "name": "cni-bin-dir"
              },
              {
                "hostPath": {
                  "path": "/etc/cni/net.d",
                  "type": ""
                },
                "name": "cni-net-dir"
              },
              {
                "hostPath": {
                  "path": "/var/log/calico/cni",
                  "type": ""
                },
                "name": "cni-log-dir"
              },
              {
                "hostPath": {
                  "path": "/var/lib/kubelet/volumeplugins/nodeagent~uds",
                  "type": "DirectoryOrCreate"
                },
                "name": "flexvol-driver-host"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "currentNumberScheduled": 1,
        "desiredNumberScheduled": 1,
        "numberAvailable": 1,
        "numberMisscheduled": 0,
        "numberReady": 1,
        "observedGeneration": 1,
        "updatedNumberScheduled": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "meta.helm.sh/release-name": "rke2-multus",
          "meta.helm.sh/release-namespace": "kube-system"
        },
        "creationTimestamp": "2025-05-21T08:23:56Z",
        "generation": 1,
        "labels": {
          "app": "rke2-multus",
          "app.kubernetes.io/managed-by": "Helm",
          "tier": "node"
        },
        "name": "rke2-multus",
        "namespace": "kube-system",
        "resourceVersion": "1191",
        "uid": "6a160711-057f-4cd6-8e98-76135573f265"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app": "rke2-multus"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "fd23672d720fdddd8faf8f629c7eec5c444ad6484d2a654621fa7d4b5c65c4fc"
            },
            "creationTimestamp": null,
            "labels": {
              "app": "rke2-multus",
              "tier": "node"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--multus-conf-file=auto",
                  "--multus-kubeconfig-file-host=/etc/cni/net.d/multus.d/multus.kubeconfig"
                ],
                "command": [
                  "/thin_entrypoint"
                ],
                "env": [
                  {
                    "name": "KUBERNETES_NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "image": "rancher/hardened-multus-cni:v4.1.4-build20250108",
                "imagePullPolicy": "IfNotPresent",
                "name": "kube-rke2-multus",
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                },
                "securityContext": {
                  "privileged": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/etc/cni/net.d",
                    "name": "cni"
                  },
                  {
                    "mountPath": "/host/opt/cni/bin",
                    "name": "cnibin"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "hostNetwork": true,
            "initContainers": [
              {
                "env": [
                  {
                    "name": "SKIP_CNI_BINARIES",
                    "value": "flannel"
                  }
                ],
                "image": "rancher/hardened-cni-plugins:v1.6.2-build20250124",
                "imagePullPolicy": "IfNotPresent",
                "name": "cni-plugins",
                "resources": {},
                "securityContext": {
                  "privileged": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/opt/cni/bin",
                    "name": "cnibin"
                  }
                ]
              }
            ],
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "multus",
            "serviceAccountName": "multus",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              },
              {
                "effect": "NoExecute",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/etc/cni/net.d",
                  "type": ""
                },
                "name": "cni"
              },
              {
                "hostPath": {
                  "path": "/opt/cni/bin",
                  "type": ""
                },
                "name": "cnibin"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "currentNumberScheduled": 1,
        "desiredNumberScheduled": 1,
        "numberAvailable": 1,
        "numberMisscheduled": 0,
        "numberReady": 1,
        "observedGeneration": 1,
        "updatedNumberScheduled": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "meta.helm.sh/release-name": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
          "meta.helm.sh/release-namespace": "nfd",
          "objectset.rio.cattle.io/id": "default-b-b327a8dc-2351-59fc-8ebe-3d002451a1c7"
        },
        "creationTimestamp": "2025-05-21T08:27:09Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "node-feature-discovery",
          "app.kubernetes.io/version": "v0.17.0",
          "helm.sh/chart": "node-feature-discovery-0.17.0",
          "objectset.rio.cattle.io/hash": "743c09b690d6a549a11a9009615af71ab9363d04",
          "role": "worker"
        },
        "name": "nfd-worker",
        "namespace": "nfd",
        "resourceVersion": "2542",
        "uid": "291b18ba-65f4-41ce-95f7-291cb428ea10"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
            "app.kubernetes.io/name": "node-feature-discovery",
            "role": "worker"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "2e4c3043280902738abd1c6be3a9c38d64155face3e98850e6c2cf625f243890"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "b-b327a8dc-2351-59fc-8ebe-3d002451a1c7",
              "app.kubernetes.io/name": "node-feature-discovery",
              "role": "worker"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "-feature-gates=NodeFeatureGroupAPI=false",
                  "-metrics=8081",
                  "-grpc-health=8082"
                ],
                "command": [
                  "nfd-worker"
                ],
                "env": [
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_UID",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.uid"
                      }
                    }
                  }
                ],
                "image": "registry.k8s.io/nfd/node-feature-discovery:v0.17.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "grpc": {
                    "port": 8082,
                    "service": ""
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "worker",
                "ports": [
                  {
                    "containerPort": 8081,
                    "name": "metrics",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8082,
                    "name": "health",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 10,
                  "grpc": {
                    "port": 8082,
                    "service": ""
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host-boot",
                    "name": "host-boot",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/host-etc/os-release",
                    "name": "host-os-release",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/host-sys",
                    "name": "host-sys",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/host-usr/lib",
                    "name": "host-usr-lib",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/host-lib",
                    "name": "host-lib",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/host-proc/swaps",
                    "name": "host-proc-swaps",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/kubernetes/node-feature-discovery/features.d/",
                    "name": "features-d",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/kubernetes/node-feature-discovery",
                    "name": "nfd-worker-conf",
                    "readOnly": true
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirstWithHostNet",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "nfd-worker",
            "serviceAccountName": "nfd-worker",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "hostPath": {
                  "path": "/boot",
                  "type": ""
                },
                "name": "host-boot"
              },
              {
                "hostPath": {
                  "path": "/etc/os-release",
                  "type": ""
                },
                "name": "host-os-release"
              },
              {
                "hostPath": {
                  "path": "/sys",
                  "type": ""
                },
                "name": "host-sys"
              },
              {
                "hostPath": {
                  "path": "/usr/lib",
                  "type": ""
                },
                "name": "host-usr-lib"
              },
              {
                "hostPath": {
                  "path": "/lib",
                  "type": ""
                },
                "name": "host-lib"
              },
              {
                "hostPath": {
                  "path": "/proc/swaps",
                  "type": ""
                },
                "name": "host-proc-swaps"
              },
              {
                "hostPath": {
                  "path": "/etc/kubernetes/node-feature-discovery/features.d/",
                  "type": ""
                },
                "name": "features-d"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "items": [
                    {
                      "key": "nfd-worker.conf",
                      "path": "nfd-worker.conf"
                    }
                  ],
                  "name": "nfd-worker-conf"
                },
                "name": "nfd-worker-conf"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "currentNumberScheduled": 1,
        "desiredNumberScheduled": 1,
        "numberAvailable": 1,
        "numberMisscheduled": 0,
        "numberReady": 1,
        "observedGeneration": 1,
        "updatedNumberScheduled": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "meta.helm.sh/release-name": "b-d765ecec-4dc2-5cdb-bfd1-85ec66ed28d1",
          "meta.helm.sh/release-namespace": "observability",
          "objectset.rio.cattle.io/id": "default-b-d765ecec-4dc2-5cdb-bfd1-85ec66ed28d1"
        },
        "creationTimestamp": "2025-05-21T08:27:36Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/instance": "b-d765ecec-4dc2-5cdb-bfd1-85ec66ed28d1",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "fluent-bit",
          "app.kubernetes.io/version": "3.2.8",
          "helm.sh/chart": "fluent-bit-0.48.9",
          "objectset.rio.cattle.io/hash": "0c91c7dac01a24502bdfd8271e203a48b7e8b280"
        },
        "name": "fluent-bit",
        "namespace": "observability",
        "resourceVersion": "3915",
        "uid": "0dcc8614-de3c-47fa-bbb7-6de76e8649b5"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-d765ecec-4dc2-5cdb-bfd1-85ec66ed28d1",
            "app.kubernetes.io/name": "fluent-bit"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "checksum/config": "af4214fc62e3303c7ebd07090cfc440dee23407246b5ae2701060cdcdfd858b9"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "b-d765ecec-4dc2-5cdb-bfd1-85ec66ed28d1",
              "app.kubernetes.io/name": "fluent-bit"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--workdir=/fluent-bit/etc",
                  "--config=/fluent-bit/etc/conf/fluent-bit.conf"
                ],
                "command": [
                  "/fluent-bit/bin/fluent-bit"
                ],
                "image": "cr.fluentbit.io/fluent/fluent-bit:3.2.9",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/",
                    "port": "http",
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "fluent-bit",
                "ports": [
                  {
                    "containerPort": 2020,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/api/v1/health",
                    "port": "http",
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "400Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/fluent-bit/etc/conf",
                    "name": "config"
                  },
                  {
                    "mountPath": "/var/log",
                    "name": "varlog"
                  },
                  {
                    "mountPath": "/var/lib/docker/containers",
                    "name": "varlibdockercontainers",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/etc/machine-id",
                    "name": "etcmachineid",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/opt/fluent-bit/certs",
                    "name": "certs"
                  },
                  {
                    "mountPath": "/var/log/containers",
                    "name": "containerlog",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/log/pods",
                    "name": "podlog",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/log/syslog",
                    "name": "syslog",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/log/auth.log",
                    "name": "authlog",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/lib/rancher/rke2/agent/logs",
                    "name": "rancheragentlog",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/run/platform-observability-agent/fluent-bit",
                    "name": "logforward"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "runAsNonRoot": true,
              "runAsUser": 502,
              "supplementalGroups": [
                4,
                500
              ]
            },
            "serviceAccount": "fluent-bit",
            "serviceAccountName": "fluent-bit",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "fluent-bit"
                },
                "name": "config"
              },
              {
                "hostPath": {
                  "path": "/var/log",
                  "type": ""
                },
                "name": "varlog"
              },
              {
                "hostPath": {
                  "path": "/var/lib/docker/containers",
                  "type": ""
                },
                "name": "varlibdockercontainers"
              },
              {
                "hostPath": {
                  "path": "/etc/machine-id",
                  "type": "File"
                },
                "name": "etcmachineid"
              },
              {
                "name": "certs",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "fluent-bit-tls"
                }
              },
              {
                "hostPath": {
                  "path": "/var/log/containers",
                  "type": "Directory"
                },
                "name": "containerlog"
              },
              {
                "hostPath": {
                  "path": "/var/log/pods",
                  "type": "Directory"
                },
                "name": "podlog"
              },
              {
                "hostPath": {
                  "path": "/var/log/syslog",
                  "type": "File"
                },
                "name": "syslog"
              },
              {
                "hostPath": {
                  "path": "/var/log/auth.log",
                  "type": "File"
                },
                "name": "authlog"
              },
              {
                "hostPath": {
                  "path": "/var/lib/rancher/rke2/agent/logs",
                  "type": "Directory"
                },
                "name": "rancheragentlog"
              },
              {
                "hostPath": {
                  "path": "/run/platform-observability-agent/fluent-bit",
                  "type": "Directory"
                },
                "name": "logforward"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "currentNumberScheduled": 1,
        "desiredNumberScheduled": 1,
        "numberAvailable": 1,
        "numberMisscheduled": 0,
        "numberReady": 1,
        "observedGeneration": 1,
        "updatedNumberScheduled": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "meta.helm.sh/release-name": "b-d2f3446f-c162-50f2-af7a-0e868e1e7c45",
          "meta.helm.sh/release-namespace": "observability",
          "objectset.rio.cattle.io/id": "default-b-d2f3446f-c162-50f2-af7a-0e868e1e7c45"
        },
        "creationTimestamp": "2025-05-21T08:28:09Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/component": "metrics",
          "app.kubernetes.io/instance": "b-d2f3446f-c162-50f2-af7a-0e868e1e7c45",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "prometheus-node-exporter",
          "app.kubernetes.io/part-of": "prometheus-node-exporter",
          "app.kubernetes.io/version": "1.9.0",
          "helm.sh/chart": "prometheus-node-exporter-4.45.0",
          "objectset.rio.cattle.io/hash": "6e48f23651bf3337644281b82e1580c640cb799a"
        },
        "name": "prometheus-node-exporter",
        "namespace": "observability",
        "resourceVersion": "3783",
        "uid": "d47012f5-f87f-4785-975e-82779db8f9b7"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/instance": "b-d2f3446f-c162-50f2-af7a-0e868e1e7c45",
            "app.kubernetes.io/name": "prometheus-node-exporter"
          }
        },
        "template": {
          "metadata": {
            "annotations": {
              "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
            },
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "b-d2f3446f-c162-50f2-af7a-0e868e1e7c45",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus-node-exporter",
              "app.kubernetes.io/part-of": "prometheus-node-exporter",
              "app.kubernetes.io/version": "1.9.0",
              "helm.sh/chart": "prometheus-node-exporter-4.45.0"
            }
          },
          "spec": {
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "eks.amazonaws.com/compute-type",
                          "operator": "NotIn",
                          "values": [
                            "fargate"
                          ]
                        },
                        {
                          "key": "type",
                          "operator": "NotIn",
                          "values": [
                            "virtual-kubelet"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "automountServiceAccountToken": false,
            "containers": [
              {
                "args": [
                  "--path.procfs=/host/proc",
                  "--path.sysfs=/host/sys",
                  "--web.listen-address=[$(HOST_IP)]:9100",
                  "--web.config.file=/opt/node-exporter/web-config.yml",
                  "--no-collector.filesystem"
                ],
                "env": [
                  {
                    "name": "HOST_IP",
                    "value": "0.0.0.0"
                  }
                ],
                "image": "quay.io/prometheus/node-exporter:v1.9.0",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 9100,
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "node-exporter",
                "ports": [
                  {
                    "containerPort": 9100,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 9100,
                    "scheme": "HTTPS"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "30Mi"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "add": [
                      "SYS_TIME"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/proc",
                    "name": "proc",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/host/sys",
                    "name": "sys",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/opt/node-exporter",
                    "name": "node-exporter-web-config"
                  },
                  {
                    "mountPath": "/opt/node-exporter/certs",
                    "name": "node-exporter-tls"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "fsGroup": 65534,
              "runAsGroup": 65534,
              "runAsNonRoot": true,
              "runAsUser": 65534
            },
            "serviceAccount": "prometheus-node-exporter",
            "serviceAccountName": "prometheus-node-exporter",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/proc",
                  "type": ""
                },
                "name": "proc"
              },
              {
                "hostPath": {
                  "path": "/sys",
                  "type": ""
                },
                "name": "sys"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "node-exporter-web-config"
                },
                "name": "node-exporter-web-config"
              },
              {
                "name": "node-exporter-tls",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "node-exporter-tls"
                }
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "currentNumberScheduled": 1,
        "desiredNumberScheduled": 1,
        "numberAvailable": 1,
        "numberMisscheduled": 0,
        "numberReady": 1,
        "observedGeneration": 1,
        "updatedNumberScheduled": 1
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "meta.helm.sh/release-name": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
          "meta.helm.sh/release-namespace": "openebs",
          "objectset.rio.cattle.io/id": "default-b-247e96ca-49bb-52ed-8f13-48029460c41d"
        },
        "creationTimestamp": "2025-05-21T08:28:50Z",
        "generation": 1,
        "labels": {
          "app.kubernetes.io/managed-by": "Helm",
          "chart": "lvm-localpv-1.6.2",
          "heritage": "Helm",
          "name": "openebs-lvm-node",
          "objectset.rio.cattle.io/hash": "55a882ec3ec1115ad36c4103fe0a67004eae27b8",
          "openebs.io/component-name": "openebs-lvm-node",
          "openebs.io/version": "1.6.1",
          "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
          "role": "openebs-lvm"
        },
        "name": "b-247e96ca-49bb-52ed-8f13-48029460c41d-lvm-localpv-node",
        "namespace": "openebs",
        "resourceVersion": "4101",
        "uid": "c13bf210-b053-412f-8125-963a8931f662"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "name": "openebs-lvm-node",
            "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "openebs-lvm-node",
              "chart": "lvm-localpv-1.6.2",
              "heritage": "Helm",
              "name": "openebs-lvm-node",
              "openebs.io/component-name": "openebs-lvm-node",
              "openebs.io/version": "1.6.1",
              "release": "b-247e96ca-49bb-52ed-8f13-48029460c41d",
              "role": "openebs-lvm"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "--v=5",
                  "--csi-address=$(ADDRESS)",
                  "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
                ],
                "env": [
                  {
                    "name": "ADDRESS",
                    "value": "/plugin/csi.sock"
                  },
                  {
                    "name": "DRIVER_REG_SOCK_PATH",
                    "value": "/var/lib/kubelet/plugins/lvm-localpv/csi.sock"
                  },
                  {
                    "name": "KUBE_NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "NODE_DRIVER",
                    "value": "openebs-lvm"
                  }
                ],
                "image": "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0",
                "imagePullPolicy": "IfNotPresent",
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "rm -rf /registration/lvm-localpv /registration/lvm-localpv-reg.sock"
                      ]
                    }
                  }
                },
                "name": "csi-node-driver-registrar",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/plugin",
                    "name": "plugin-dir"
                  },
                  {
                    "mountPath": "/registration",
                    "name": "registration-dir"
                  }
                ]
              },
              {
                "args": [
                  "--nodeid=$(OPENEBS_NODE_ID)",
                  "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                  "--plugin=$(OPENEBS_NODE_DRIVER)",
                  "--kube-api-qps=0",
                  "--kube-api-burst=0",
                  "--listen-address=$(METRICS_LISTEN_ADDRESS)"
                ],
                "env": [
                  {
                    "name": "OPENEBS_NODE_ID",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "OPENEBS_CSI_ENDPOINT",
                    "value": "unix:///plugin/csi.sock"
                  },
                  {
                    "name": "OPENEBS_NODE_DRIVER",
                    "value": "agent"
                  },
                  {
                    "name": "LVM_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "METRICS_LISTEN_ADDRESS",
                    "value": ":9500"
                  },
                  {
                    "name": "ALLOWED_TOPOLOGIES",
                    "value": "kubernetes.io/hostname,"
                  }
                ],
                "image": "openebs/lvm-driver:1.6.1",
                "imagePullPolicy": "IfNotPresent",
                "name": "openebs-lvm-plugin",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "64Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": true,
                  "privileged": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/plugin",
                    "name": "plugin-dir"
                  },
                  {
                    "mountPath": "/dev",
                    "name": "device-dir"
                  },
                  {
                    "mountPath": "/var/lib/kubelet/",
                    "mountPropagation": "Bidirectional",
                    "name": "pods-mount-dir"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "priorityClassName": "b-247e96ca-49bb-52ed-8f13-48029460c41d-lvm-localpv-csi-node-cri",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "openebs-lvm-node-sa",
            "serviceAccountName": "openebs-lvm-node-sa",
            "terminationGracePeriodSeconds": 30,
            "volumes": [
              {
                "hostPath": {
                  "path": "/dev",
                  "type": "Directory"
                },
                "name": "device-dir"
              },
              {
                "hostPath": {
                  "path": "/var/lib/kubelet/plugins_registry/",
                  "type": "DirectoryOrCreate"
                },
                "name": "registration-dir"
              },
              {
                "hostPath": {
                  "path": "/var/lib/kubelet/plugins/lvm-localpv/",
                  "type": "DirectoryOrCreate"
                },
                "name": "plugin-dir"
              },
              {
                "hostPath": {
                  "path": "/var/lib/kubelet/",
                  "type": "Directory"
                },
                "name": "pods-mount-dir"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": "100%"
          },
          "type": "RollingUpdate"
        }
      },
      "status": {
        "currentNumberScheduled": 1,
        "desiredNumberScheduled": 1,
        "numberAvailable": 1,
        "numberMisscheduled": 0,
        "numberReady": 1,
        "observedGeneration": 1,
        "updatedNumberScheduled": 1
      }
    }
  ],
  "kind": "List",
  "metadata": {
    "resourceVersion": ""
  }
}
