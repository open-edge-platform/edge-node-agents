#!/bin/bash -e

. /usr/share/debconf/confmodule

db_get node-agent/onboarding.enabled
if [ ! -z "$RET" ]; then
    sed -i -e '/^onboarding:$/{n' -e 's/enabled:.*/enabled: '"$RET"'/' -e '}' /etc/edge-node/node/confs/node-agent.yaml
fi

db_get node-agent/onboarding.serviceURL
if [ ! -z "$RET" ]; then
    sed -i -e '/^onboarding:$/{n' -e '/.*enabled:/{n' -e 's#serviceURL:.*#serviceURL: '"$RET"'#' -e '}}' /etc/edge-node/node/confs/node-agent.yaml
fi

db_get node-agent/onboarding.heartbeatInterval
if [ ! -z "$RET" ]; then
    sed -i -e '/^onboarding:$/{n' -e '/.*enabled:/{n' -e '/.*serviceURL:/{n' -e 's/heartbeatInterval:.*/heartbeatInterval: '"$RET"'/' -e '}}}' /etc/edge-node/node/confs/node-agent.yaml
fi

db_get node-agent/auth.accessTokenURL
if [ ! -z "$RET" ]; then
    sed -i -e '/^auth:$/{n' -e 's#accessTokenURL:.*#accessTokenURL: '"$RET"'#' -e '}' /etc/edge-node/node/confs/node-agent.yaml
fi

db_get node-agent/auth.rsTokenURL
if [ ! -z "$RET" ]; then
    sed -i -e '/^auth:$/{n' -e '/.*accessTokenURL:/{n' -e 's#rsTokenURL:.*#rsTokenURL: '"$RET"'#' -e '}}' /etc/edge-node/node/confs/node-agent.yaml
fi

db_get node-agent/proxy.aptSourceURL
if [ ! -z "$RET" ]; then
    sed -i -e 's#reverse_proxy.*#reverse_proxy https://'"$RET"' {#' /etc/caddy/pua.caddy
fi

db_get node-agent/proxy.aptSourceProxyPort
if [ ! -z "$RET" ]; then
    sed -i -e 's#localhost.*#localhost:'"$RET"' {#' /etc/caddy/pua.caddy
    sed -i -E '/name: client-proxy/,/url:/ s|(http://[^:]+:)[0-9]+|\1'"$RET"'|' /etc/edge-node/node/confs/node-agent.yaml
fi

db_get node-agent/proxy.aptSourceFilesRSRoot
if [ ! -z "$RET" ]; then
   sed -i -E '/name: client-proxy/,/url:/ s|(http://[^/]+/)[^/]+|\1'"$RET"'|' /etc/edge-node/node/confs/node-agent.yaml
fi

if ! grep -q "EnvironmentFile" "/lib/systemd/system/caddy.service"; then
    sed -i '/^\[Service\]$/a EnvironmentFile=\/etc\/environment' /lib/systemd/system/caddy.service
fi

db_get node-agent/auth.RSType
if [ ! -z "$RET" ]; then
    if [ "$RET" == "no-auth" ]; then
        sed -i -e '/header_up Authorization.*/d' /etc/caddy/pua.caddy
    fi
fi

GUID="$(cat /sys/class/dmi/id/product_uuid)"
sed -i "s/^GUID: '.*'/GUID: '$GUID'/" /etc/edge-node/node/confs/node-agent.yaml

# Add node-agent to the list of allowed user to incron
if [ ! -e "/etc/incron.allow" ] || ! grep -q "node-agent" "/etc/incron.allow"; then
    echo "node-agent" >> /etc/incron.allow
fi

chmod -R 710 etc/intel_edge_node/caddy
chmod 700 etc/intel_edge_node/client-credentials
chmod 600 etc/intel_edge_node/client-credentials/*
chmod -R 750 etc/intel_edge_node/tokens

# Ensure path exists when node-agent starts
chown node-agent:bm-agents /run/node-agent
chmod 750 /run/node-agent

# Ensure file exists when incron starts
touch /etc/intel_edge_node/tokens/release-service/access_token
chmod 640 /etc/intel_edge_node/tokens/release-service/access_token

apparmor_parser -rK /etc/apparmor.d/opt.edge-node.bin.node-agent

if ! grep -q "127.0.0.1 localhost" "/etc/hosts"; then
    echo "127.0.0.1 localhost" >> /etc/hosts
fi

# Add single line in main Caddyfile to use the other *.caddy files
echo "import /etc/caddy/*.caddy" > /etc/caddy/Caddyfile

# Update file/dir ownership
chown -R node-agent:bm-agents /etc/edge-node/node
chown node-agent:bm-agents /etc/intel_edge_node
chown -R node-agent:bm-agents /etc/intel_edge_node/client-credentials
chown -R node-agent:bm-agents /etc/intel_edge_node/tokens
chown -R caddy:caddy /etc/intel_edge_node/caddy
usermod -a -G bm-agents caddy

chmod 750 /etc/caddy
chmod 640 /etc/caddy/*
chown -R platform-update-agent:bm-agents /etc/caddy

# Restart incron to ensure it loads the new rule
systemctl restart incron
# Restart caddy as systemd service file is updated
systemctl daemon-reload
systemctl restart caddy

#DEBHELPER#
