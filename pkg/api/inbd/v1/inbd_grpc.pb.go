// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: inbd/v1/inbd.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	InbService_GetVersion_FullMethodName = "/inbd.v1.InbService/GetVersion"
)

// InbServiceClient is the client API for InbService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InbServiceClient interface {
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
}

type inbServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInbServiceClient(cc grpc.ClientConnInterface) InbServiceClient {
	return &inbServiceClient{cc}
}

func (c *inbServiceClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, InbService_GetVersion_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InbServiceServer is the server API for InbService service.
// All implementations must embed UnimplementedInbServiceServer
// for forward compatibility
type InbServiceServer interface {
	GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	mustEmbedUnimplementedInbServiceServer()
}

// UnimplementedInbServiceServer must be embedded to have forward compatible implementations.
type UnimplementedInbServiceServer struct {
}

func (UnimplementedInbServiceServer) GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (UnimplementedInbServiceServer) mustEmbedUnimplementedInbServiceServer() {}

// UnsafeInbServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InbServiceServer will
// result in compilation errors.
type UnsafeInbServiceServer interface {
	mustEmbedUnimplementedInbServiceServer()
}

func RegisterInbServiceServer(s grpc.ServiceRegistrar, srv InbServiceServer) {
	s.RegisterService(&InbService_ServiceDesc, srv)
}

func _InbService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InbServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InbService_GetVersion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InbServiceServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InbService_ServiceDesc is the grpc.ServiceDesc for InbService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InbService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "inbd.v1.InbService",
	HandlerType: (*InbServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _InbService_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inbd/v1/inbd.proto",
}
